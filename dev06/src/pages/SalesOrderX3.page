<apex:page standardController="Order" sidebar="false" showHeader="true" extensions="SalesOrderX3Controller" tabstyle="Sales_Orders__tab"  >
   <c:LoadBarComponent />
   <apex:pageMessages Id="IdLog"/> 
    <style type="text/css">
        .bPageTitle 
        {
            padding: 0px !important;
            margin: 5px !important;
        }
        .pageTitleIcon {
            background-image: url(/img/icon/orderBell32.png) !important; 
        }
        .tblEntity 
        {
            width: 400px;
            margin:0 auto;
            border-collaps:collaps;
        }
        .activeTab 
        {
            background-color: #236FBD; 
            color:white;
            background-image:none;
            border-top-left-radius:5px;
            border-top-right-radius:5px
        }
        
        .inactiveTab 
        {
            background-color: lightgrey; 
            color:black; 
            background-image:none;
            border-top-left-radius:5px;
            border-top-right-radius:5px
        }
        .hdr
        {
            font-weight:bold;
            vertical-align: middle !important;
        }
        .rich-tab-header{font-size: 12px;}
        .rich-tabhdr-side-cell{border:none;}
        .rich-tabpanel-content{font-size: 12px;}
        .requiredLegend
        {
            background-color: transparent !important;
        }
        .refreshListButton1
        {
            background: url(/img/alohaSkin/sync.png) top left no-repeat !important;
            width: 22px ;
            height: 23px;
            vertical-align: middle;
            background-position: 2px 3px !important;
        }
        .ConFailed
        {
            color:red;
            font-size:100%;
            font-weight:bold;
        }
        .ConSuccess
        {
            color:green;
            font-size:100%;
            font-weight:bold;
        }
        .data2Col
        {
            padding-left: 0px !important;
            padding-right: 0px !important;
        }
        .error{border: 1px solid #c00 !important;}
        label.error
        {
            border: 0px !important;
            margin-left:5px !important; 
            color:red !important;
        }
        .labelCol
        {
            padding-right: 15px !important;
            vertical-align: middle !important;
        }
        .ui-widget 
        {
            font-family: Arial,Helvetica,sans-serif !important;
            font-size: 1.0em !important;
        }
        .ui-widget-header 
        {
            border: 1px solid #aaaaaa !important;
            background: #cccccc !important;
            color: #222222 !important;
            font-weight: bold !important;
        }
        .ui-widget-content 
        {
            border: 1px solid #aaaaaa !important;
            background: #ffffff !important;
            color: #222222 !important;
        }
        .ui-progressbar 
        {
            height:20px !important;
            padding-right:0px !important;
            margin-right:0px !important;
        }
        .ui-progressbar-value
        {
            height:20px !important;
            background: #63a4c5 !important;
        }
        .progress-label 
        {
            margin-left: 10px;
            text-align: center;
            top: 4px;
            font-size:12px;
            font-weight: bold;
            text-shadow: 1px 1px 0 #fff;
        }
        
        .detailList
        {
            width : 100% !important;
            border-collapse: separate;
            border-spacing: 2px;
            border-color: gray;
            
        }
        
        tr.headerRow {
            background: #f2f3f3;
            border-width: 0 0 1px 1px;
            border-color: #e0e3e5;
            color: #000;
            font-weight: bold;
            padding: 5px 2px 4px 5px;
        }
        
        table.list {
            background-color: #fff;
            border-top: 1px solid #e0e3e5 !important;
        }
        
        .ui-dialog-titlebar 
        {
            background-color: #6aafa2 !important;
            color: #fff !important;
            font-family: Arial,Helvetica,sans-serif;
        }
        .ui-autocomplete-loading 
        { 
        <!--background:white url({!URLFOR($Resource.LoadingBarImage)}) right center no-repeat;-->
        background-size: 60px 50px;
        }
        .ui-autocomplete {
        height:200px;
        overflow:scroll;
        }
        .autocomplete{
        border-color: #929292 #D5D5D5 #D5D5D5 #929292 !important;
        border-style: solid;border-width: 1px !important;
        height: 18px !important;
        padding: 3px 10px;
        //width: 534px !important;
        }
        .searchBtn{
        background: #FDCE3E !important;
        border: 1px solid #E5A716 !important;
        color: #434343 !important;
        height: 26px !important;
        margin-left: 7px !important;
        padding: 0 23px !important;
        font-size: 15px !important; 
        font-weight: bold !important;
        }
        .bPageTitle
        {
            padding: 5px 0px !important;
            margin-bottom: 5px !important;
        }
        .HtmlInput
        {
        
        }
    </style>
    <script type="text/javascript" src="{!URLFOR($Resource.IntegrationResources, '/Jquery/jquery.min.js')}" ></script>
    <script type="text/javascript" src="{!URLFOR($Resource.IntegrationResources, '/Jquery/jquery-ui.min.js')}" ></script>
    <script type="text/javascript" src="{!URLFOR($Resource.IntegrationResources, '/Jquery/jquery.serializeJSON.js')}" ></script>
    <script type="text/javascript" src="{!URLFOR($Resource.IntegrationResources, '/Jquery/Validation/jquery.validate.js')}" ></script>
    <script type="text/javascript" src="{!URLFOR($Resource.IntegrationResources, '/Jquery/Validation/jquery.validate.min.js')}" ></script>
    <!--<link rel="stylesheet" href="//code.jquery.com/ui/1.10.4/themes/smoothness/jquery-ui.css"></link>-->
    <link rel="stylesheet" href="{!URLFOR($Resource.IntegrationResources, '/Jquery/ui/1.10.4/themes/smoothness/jquery-ui.css')}"></link> 
    <script type="text/javascript" src="{!URLFOR($Resource.IntegrationResources,'/Script/Lookup.js')}" ></script>
    <script type="text/javascript" src="{!URLFOR($Resource.NumbersOnly)}" ></script>

    <script type="text/javascript">
        var j$ = jQuery.noConflict();
        var OrderId;
        
        var gblAccountId;
        var gblIntegrationKey;
        var gblHeaderMap;
        var gblLineDetails;
        var gblDocumentType;
        var gblbPromote;
        var gblJSONDetails;
        var gERPSystemName;
        var gERPCompanyCode;
        var glERPSystemName;
        var ERPSystemName;
        var ERPVersion;
        var Synchronization;
        //var SelectionArray = [];
        var rowCount =0;
        j$(document).ready(function () 
        {
            hideLoading(); 
            
            debugger;
            OrderId = '{!JSENCODE(ERPOrder.Id)}';
            var mode ='{!JSENCODE(Mode)}';
            var ERPOrderNumber = '{!JSENCODE(OrderNumber)}';
            ERPSystemName = '{!JSENCODE(ERPSystemName)}';
            ERPVersion = '{!JSENCODE(ERPVersion)}';
            Synchronization = '{!JSENCODE(Synchronization)}';
            //alert(Synchronization);
            if(ERPSystemName =='SageERPX3')
            {
                j$('#lineAmtsubTax').show();
                j$('#lineAmtaddTax').show();
                j$('#tdlineAmtsubTax').show();
                j$('#tdlineAmtaddTax').show();
                j$('#lineAmtsubTotal').show();
                j$('#lineAmtaddTotal').show();
                j$('#DiscountRow').hide();
            }
            else
                j$('#DiscountRow').show();
            if(OrderId !='')
            {
                var OrderDetails='';
                
                if('{!JSENCODE(JSONOrderDetails)}' != '')
                    OrderDetails = j$.parseJSON('{!JSENCODE(JSONOrderDetails)}');
                
               // j$('#CustomerNo').val(OrderDetails.ARDivisionNo +'-'+ OrderDetails.CustomerNo);
               
                //j$('#Account').val(OrderDetails.Account);
               // j$('#Account_lkid').val(OrderDetails.AccountId);
                
               // j$('#ShipTo').val(OrderDetails.ShipToCode);
                j$( "#OrderRefNo" ).val(OrderDetails.OrderRefNo);
                j$('#Integration').html('{!JSENCODE(orderIntegrationName)}');               
               // j$('#IntegrationId').val('{!JSENCODE(orderIntegrationKey)}');

                j$('#Payment').val(OrderDetails.PaymentType);
                //j$("[id$='OrderDate']").val(OrderDetails.OrderDate);
                // j$('#Currency').val(OrderDetails.Currency);
                 
                //j$('#SalesSite').val(OrderDetails.SalesSite);
               // j$('#SalesSite_lkid').val(OrderDetails.SalesSiteId);
                
               // j$('#ShipmentSite').val(OrderDetails.ShipmentSite);
               // j$('#ShipmentSite_lkid').val(OrderDetails.ShipmentSiteId);
                
                //fncPaymentTypeChanged(j$('#Payment'));
                
                if(OrderDetails.PaymentType)
                {
                    switch(OrderDetails.PaymentType.toLowerCase())
                    {
                        case 'cash' :
                            j$("[id$='ReferenceNo']").val(OrderDetails.ReferenceNo);
                            break;
                        case 'check' :
                            j$("[id$='ReferenceNo']").val(OrderDetails.CheckNoForDeposit);
                            break;
                        default:
                            if(OrderDetails.PaymentType.toLowerCase() != '')
                            {
                                j$('#CreditCards').val(OrderDetails.CreditCard4DigitNo);
                                j$('#CreditCardENo').val(OrderDetails.CreditCardId);
                                j$('#AuthNo').val(OrderDetails.AuthNo);
                                j$('#AuthAmt').val(OrderDetails.AuthAmt);
                                j$('#Authdatetime').val(OrderDetails.AuthDateTime);
                            }
                            break;
                            
                    }
                }
                
                j$('#User_lkid').val(OrderDetails.CompanyAuthorizedById);
                j$( "#Contact" ).val(OrderDetails.ContactName);
                j$('#Contact_lkid').val(OrderDetails.CustomerAuthorizedById);
               // j$( "#User" ).val(OrderDetails.UserName);
                
                j$("[id$='Deposit']").val(OrderDetails.DepositAmt);
                
                //j$('#DiscountType').val(OrderDetails.DiscountType).trigger('change');
                
                j$('#DiscountType').val(OrderDetails.DiscountType);
                j$("[id$='DocumentType']").val(OrderDetails.DocumentType);
                
                fncToggleFieldsOnDocumentType(OrderDetails.DocumentType)
                
                j$('#DiscountAmt').val(OrderDetails.DiscountAmt);
               // j$('#DiscountPct').val(OrderDetails.DiscountPC);
                j$("#FOB" ).val(OrderDetails.FOB);
                j$("[id$='Freight']").val(OrderDetails.FreightAmt);
                              
                j$("[id$='PricebookId']").val(OrderDetails.Pricebook2Id);
                j$("[id$='Pricebook']").html(OrderDetails.PricebookName);
                
                fncERPName(OrderDetails.AccountId);
                if(OrderDetails.BatchFaxNo)
                {
                    if(OrderDetails.BatchFaxNo.toLowerCase() == 'y')
                        j$('#BatchFax').prop('checked',true);
                }
                if(OrderDetails.PrintPickingSheets)
                {
                    if(OrderDetails.PrintPickingSheets.toLowerCase() == 'y')
                        j$('#PrintPickSheets').prop('checked',true);
                }
                if(OrderDetails.PrintSalesOrders)
                {
                    if(OrderDetails.PrintSalesOrders.toLowerCase() == 'y')
                        j$('#PrintOrder').prop('checked',true);
                }
                
                j$('#SalesPerson').val(OrderDetails.ARDivisionNo + OrderDetails.SalesPersonNo);
                j$("#ShipExpireDate").val(OrderDetails.ShipExpireDate);
                j$("[id$='SalesTaxAmt']").html(OrderDetails.SalesTaxAmt);
                console.log('Value :' + OrderDetails.SalesTaxAmt);
                console.log('HTML Value :' + j$("[id$='SalesTaxAmt']").html());
                j$('#ShipMethod').val(OrderDetails.Shipvia);
                j$('#TaxSchedule').val(OrderDetails.TaxSchedule);
                j$('#TermsCode').val(OrderDetails.TermsCode);
                j$('#OrderTotal').html(OrderDetails.TotalAmount);
               // j$('#OrderTotal_X3').html(OrderDetails.TotalAmount);
                j$('#Warehouse').val(OrderDetails.WarehouseCode);

                if(ERPOrderNumber !='' && mode =='View' )
                {   
                   
                     j$("[id$='btnEdit']").hide();
                     j$("[id$='btnSave']").hide();  //hide()
                     j$("[id$='btnPromote']").hide();    //hide()
                     
                            
                     j$("[id$='OrderDate']").each(function()
                         {
                                  j$(this).attr('disabled','disabled');
                         });
                         
                         
                          j$('.HtmlInput').each(function()
                            {
                              j$(this).attr('disabled','disabled');
                                     
                            });
                            
                         j$('.promote').each(function()
                            {
                                j$(this).attr('disabled','disabled').removeClass('btn').addClass('btnDisabled');
                            });
                      
                 
                   
                }
                 else
                {
                    
                     j$("[id$='btnSave']").show(); 
                     j$("[id$='btnPromote']").show(); 
                     
                 }
                
                
                  fncCalculateTotal();
               }   
            else
            {
                j$("[id$='Freight']").val('0.00');
                j$("[id$='Deposit']").val('0.00');
                j$("[id$='SalesTaxAmt']").html('0.00');
                j$("[id$='OrderTotal']").html('0.00');
            }
            
            j$('#calYearPicker').html('');
          
            //fncSetSelectionArray();
            
            for(i=1900;i<=2025;i++)
            {
                j$('#calYearPicker').append('<option value="'+i+'">'+i+'</option>');
            } 
            
            j$( "#ShipExpireDate" ).datepicker({ dateFormat: "mm/dd/yy",changeMonth:true,changeYear:true, });
            j$( "#OrderDate" ).datepicker({ dateFormat: "mm/dd/yy",changeMonth:true,changeYear:true,});
            
            j$( "#Authdatetime" ).datepicker({ dateFormat: "mm/dd/yy",changeMonth:true,changeYear:true, });
            
            j$("[id$='btnSave']").click(function()
            {
                fncSaveOrder(false);
            });
            
            j$("[id$='btnPromote']").click(function()
            {
               //alert('Synchronization :'+Synchronization);
               if(Synchronization =='' ||Synchronization =='ERP to Salesforce')
               {              
                   fncDisplayMessage('Warning','Kindly set Integration Synchronization setting to both or Salesforce to ERP to promote order in ERP'); 
                   return;
               }
                fncSaveOrder(true);
            });            
            
            j$("[id$='btnCancel']").click(function()
            {
                window.top.location= 'https://'+window.location.host+'/apex/ERPOrderList';
                //fncCancel();
            });      
        });
        

        function fncAddRow()
        {
            var rowindex = rowCount;           
            if(j$('#tblMultipleItems tr').length > 0)
            {
                var LastRowID=j$('#tblMultipleItems tr:last').attr('id');
                var index = LastRowID.replace('row_','');
            
                if(j$('#Product_'+index).val().trim() == '')
                    return;
            }
            
            var HTML='<tr class="dataRow" id="row_'+rowCount+'">';
            
            HTML += '<td><a style="color: #015ba7 !important;" href="javascript:void(0);" onclick="fncRemoveRow(this)" class="actionLink" title="Delete">Del</a></td>';
            HTML += '<td><input style="width:90px" type="text" id="ProductFamily_'+rowCount+'"/></td>';
            HTML += '<td><input type="text" id="Product_'+rowCount+'" style="width:110px" /></td>';
            HTML += '<td><label id="ProductDesc_'+rowCount+'"/></td>';
            
            HTML += '<td style="text-align: right;"><input type="text" id="ProductUnitPrice_'+rowCount+'" onkeypress="return NumbersOnly(event,this,true,2)" onchange="if(glERPSystemName==\'SageERPX3\'){fncRealTimeDataForMultipleItems(\'UnitCost\','+rowCount+');} fncCalculateExtAmt(\'UnitCost\','+rowCount+')" style="width:80px;text-align: right" value="0.00"/></td>';
            HTML += '<td ><input style="text-align: right;width:100px" type="text" id="ProductQuantity_'+rowCount+'" onkeypress="return NumbersOnly(event,this,true,2)" onchange="fncRealTimeDataForMultipleItems(\'quantity\','+rowCount+');" value="0"/></td>';
            HTML += '<td ><input style="text-align: right;width:100px" type="text" id="ProductExtAmt_'+rowCount+'" onkeypress="return NumbersOnly(event,this,true,2)" value="0.00" disabled="disabled"></input></td>';
            HTML += '<td style="text-align: right;"><label id="ProductQOH_'+rowCount+'">0.00</label ></td>';
            if(glERPSystemName =='SageERPX3' ||ERPSystemName =='SageERPX3')
            {
                HTML += '<td style="text-align: right;"><input type="text" style="width:50px;" readonly="readonly" id="minusTax_'+rowCount+'" value="0.00"/></td>';
                HTML += '<td style="text-align: right;"><input type="text" style="width:50px;" readonly="readonly" id="plusTax_'+rowCount+'" value="0.00"/></td>';
            }
            else
            {
                HTML += '<td style="text-align: right;"><input type="text" style="width:85px;" id="ProductComment_'+rowCount+'"/></td>';
            }
            HTML += '<td style="display:none">';
            HTML += '<label id="ProductTXClass_'+rowCount+'" style="display:none"/>';
            HTML += '<label id="ProductTaxRate_'+rowCount+'" style="display:none"/>';
            HTML += '<label id="ProductId_'+rowCount+'" style="display:none"/>';
            HTML += '<label id="Warehouse_'+rowCount+'" style="display:none"/>';
            HTML += '<label id="UOM_'+rowCount+'" style="display:none"/>';
            
            HTML += '</td>';
            HTML += '</tr>';
            
            if(j$('#tblMultipleItems tr').length > 0)
            {
                j$('#tblMultipleItems tr:last').after(HTML);    
            }
            else
            {
                j$('#tblMultipleItems').append(HTML);
            }
            
            //Auto complete textbox component
            var ProductFamily = j$('#ProductFamily_'+rowCount);
            var ProductDesc = j$('#ProductDesc_'+rowCount);
            var Product = j$('#Product_'+rowCount);
            
            var ProductId = j$('#ProductId_'+rowCount);
            var Warehouse = j$('#Warehouse_'+rowCount);
            var UOM = j$('#UOM_'+rowCount);
            
            var UnitPrice= j$('#ProductUnitPrice_'+rowCount);
            var Quantity= j$('#ProductQuantity_'+rowCount);
            var ExtAmt = j$('#ProductExtAmt_'+rowCount);
            var QOH = j$('#ProductQOH_'+rowCount); 
            var TXClass = j$('#ProductTXClass_'+rowCount);
            var prodComment = j$('#ProductComment_'+rowCount);
            
            j$(ProductFamily)
            
            //auto complete method
            j$(ProductFamily).autocomplete(
            {
                minLength: 0,        
                source: function(request, response) 
                {
                    queryTermFamily = request.term;
                    var sObjects;
                    var searchText = j$(ProductFamily).val();
                
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SalesOrderX3Controller.getFamilyRecords}',searchText, j$("[id$='IntegrationId']").val(),j$("[id$='DocumentType']").find(":selected").text(), 
                    function (result, event) 
                    {
                     if (event.status) 
                    {
                    //SalesOrderCntlr.getFamilyRecords(searchText, j$("[id$='IntegrationId']").val(),j$("[id$='DocumentType']").find(":selected").text(), function(result, event)
                    
                        if (event.type == 'exception') 
                        {
                            console.log(event.message);
                            alert(event.message);
                        }
                        else 
                        {
                            sObjects = result;
                            response(sObjects);
                        }
                        }
                    });
                },
                focus: function(event, ui) 
                {
                    j$(ProductFamily).val(ui.item.FamilyCode);
                    return false;
                },
                select: function(event, ui) 
                {
                    j$(ProductFamily).val(ui.item.FamilyCode);
                    j$(Product).val('');
                    
                    j$(ProductId).html('');
                    j$(Warehouse).html('');
                    j$(UOM).html('');
                    
                    j$(ProductDesc).val('');
                    j$(UnitPrice).html('0.00');
                    j$(Quantity).val('0.00');
                    j$(ExtAmt).val('0.00');
                    j$(QOH).html('0.00');
                    j$(TXClass).html('');
                    
                    switch(ui.item.FamilyCode.trim().toLowerCase())
                    {
                    
                        case 'charge' :
                            j$(Quantity).prop('disabled',true);
                            j$(ExtAmt).prop('disabled',false);
                            j$(UnitPrice).prop('disabled',true);
                            
                            break;
                        
                        case 'comment':
                            j$(Quantity).prop('disabled',true);
                            j$(ExtAmt).prop('disabled',true);
                            j$(UnitPrice).prop('disabled',true);
                            break;      
                            
                        case 'miscellaneous':
                            j$(Quantity).prop('disabled',false);
                            j$(ExtAmt).prop('disabled',true);
                            j$(UnitPrice).prop('disabled',false);
                            break;
                            
                        default:    
                            j$(Quantity).prop('disabled',false);
                            j$(ExtAmt).prop('disabled',true);
                            break;
                    }
                    
                    return false;
                },
                
            }).data("ui-autocomplete")._renderItem = function(ul, item) 
            {
                var entry = "<a>" + item.FamilyCode;
                j$.each("".split(","), function(key, value)
                {
                    entry = entry;
                });
                
                entry = entry + "</a>";
                
                entry = entry.replace(queryTermFamily, "<b>" + queryTermFamily + "</b>");
                
                return j$("<li></li>").data("item.autocomplete", item).append(entry).appendTo(ul);
            };
            
            var queryTerm;
            //auto complete method
            j$(Product).autocomplete(
            {
                minLength: 0,
        
                source: function(request, response) 
                {
                    queryTerm = request.term;
                    var sObjects;
                    var searchText = j$(Product).val();
                
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SalesOrderX3Controller.getRecords}',searchText,j$("[id$='PricebookId']").val(),j$(ProductFamily).val(),j$("[id$='DocumentType']").find(":selected").text(), 
                     function (result, event) 
                    {
                    if (event.status) 
                    {
                    //SalesOrderCntlr.getRecords(searchText,j$("[id$='PricebookId']").val(),j$(ProductFamily).val(),j$("[id$='DocumentType']").find(":selected").text(), function(result, event)
                    
                        if (event.type == 'exception') 
                        {
                            console.log(event.message);
                            alert(event.message);
                        }
                        else 
                        {
                            sObjects = result;
                            response(sObjects);
                        }
                    }
                    });
                },
                focus: function(event, ui) 
                {
                    j$(Product).val(ui.item.ProductCode);
                    return false;
                },
                select: function(event, ui) 
                {
                    showLoading();
                    
                    var ProductCode = ui.item.ProductCode;
                    var QuantityOrdered = isNaN(parseFloat(j$(Quantity).val())) ? '0.00' : j$(Quantity).val();
                    
                    j$(Product).val(ui.item.ProductCode);
                    j$(ProductId).html(ui.item.Id);
                    //j$(ProductFamily).val(ui.item.ProductFamily);
                    
                    switch(ui.item.ProductFamily.trim().toLowerCase())
                    {                   
                        case 'charge' :
                            j$(Quantity).prop('disabled',true);
                            j$(ExtAmt).prop('disabled',false);
                            j$(UnitPrice).prop('disabled',true);
                            break;
                        
                        case 'comment':
                            j$(Quantity).prop('disabled',true);
                            j$(ExtAmt).prop('disabled',true);
                            j$(UnitPrice).prop('disabled',true);
                            break;      
                            
                        case 'miscellaneous':
                            j$(Quantity).prop('disabled',false);
                            j$(ExtAmt).prop('disabled',true);
                            j$(UnitPrice).prop('disabled',false);
                            break;
                            
                        default:    
                            j$(Quantity).prop('disabled',false);
                            j$(ExtAmt).prop('disabled',true);
                            
                            break;
                    }
                    
                    hideLoading();
                    
                    return false;
                },
                
            }).data("ui-autocomplete")._renderItem = function(ul, item) 
            {
                var entry = "<a>" + item.Name;
                j$.each("".split(","), function(key, value)
                {
                    entry = entry; 
                });
                
                entry = entry + "</a>";
                
               // entry = entry.replace(queryTerm, "<b>" + queryTerm + "</b>");
              
                return j$("<li></li>").data("item.autocomplete", item).append(entry).appendTo(ul);
            };
            
            j$(Product).focusout(function(){
                fncRealTimeDataForMultipleItems('product',rowindex);
            });
            
            rowCount++;
        }
        
        
        function fncCalculateExtAmt(param,index)
        {
            if(glERPSystemName =='Sage100ERP' || ERPSystemName =='Sage100ERP')
            {
                var UnitPrice= j$('#ProductUnitPrice_'+index);
                var Quantity= j$('#ProductQuantity_'+index);
                          
                var getunitprice1 = j$(UnitPrice).val();
                
                var getunitprice = j$(UnitPrice).val() != '' ? parseFloat(j$(UnitPrice).val()).toFixed(2) : 0.00; 
                var getQuantity = j$(Quantity).val() != '' ? parseFloat(j$(Quantity).val()).toFixed(2) : 0; 
                var getcalvalue = getQuantity * getunitprice;
                j$('#ProductExtAmt_'+index).val(getcalvalue);
                j$('#minusTax_'+index).val('0.00');
                j$('#plusTax_'+index).val('0.00');
            }
        }
        
        function AfterReadRealTimeProductData(RetJSONPrdDetails)
        {   
            
            //alert(RetJSONPrdDetails);
            debugger;
            var ProductFamily = j$('#ProductFamily_'+index);
            var ProductDesc = j$('#ProductDesc_'+index);
            var Product = j$('#Product_'+index);
            
            var ProductId = j$('#ProductId_'+index);
            var Warehouse = j$('#Warehouse_'+index);
            var UOM = j$('#UOM_'+index);
            
            var UnitPrice= j$('#ProductUnitPrice_'+index);
            var Quantity= j$('#ProductQuantity_'+index);
            var ExtAmt = j$('#ProductExtAmt_'+index);
            var QOH = j$('#ProductQOH_'+index);
            var TXClass = j$('#ProductTXClass_'+index);
            
            var TXRule = j$('#ProductTXClass_'+index);
            var TXRate = j$('#ProductTaxRate_'+index);
            
            var multiSubTax =j$('#minusTax_'+index);
            var multiAddTax =j$('#plusTax_'+index);
            
            var ProductCode = j$(Product).val().trim();
            var QuantityOrdered = isNaN(parseFloat(j$(Quantity).val())) ? '0' : j$(Quantity).val();
            
            
            var validate = result['isvalidate'];
                                            
            var Connection = result['Connection'];

            if(Connection =='Failed')
            {
                fncDisplayMultiProdMessage('Info','Unable to connect to the ERP system. Please check connection.');   
                j$(Product).focus(); 
                 hideLoading();
                return false;
            }
            
            if(validate =='false')
            {
                fncDisplayMultiProdMessage('Info','please select valid Shipment site');
                j$(Product).focus(); 
                 hideLoading();
                return false;
            }
            
            var ValidError = result['Error'];
            if(ValidError !=undefined)
            {
                 fncDisplayMultiProdMessage('Info',result['Error']);
                 j$(Product).focus();
                 fncClearProductData();
                 hideLoading();
                 return false;
            }
          
            j$(ProductFamily).val(j$(ProductFamily).val());
          
            
            j$(UOM).html(result['UOM']);
            
            var unitPrice = isNaN(parseFloat(ReplaceString(result['UnitPrice'])).toFixed(2)) ? '0.00' : parseFloat(ReplaceString(result['UnitPrice'])).toFixed(2);
              
            j$(ProductDesc).html(result['ItemDescription']);
            j$(UnitPrice).html(unitPrice);
            j$(Quantity).val(parseFloat(ReplaceString(result['Quantity'])));

            var Amount = parseFloat(unitPrice) * parseFloat(ReplaceString(result['Quantity'])).toFixed(2);

            j$(UnitPrice).val(unitPrice);
            
            j$(QOH).html(isNaN(parseFloat(ReplaceString(result['QOH'])).toFixed(2)) ? '0.00' : parseFloat(ReplaceString(result['QOH'])).toFixed(2));
            
            j$(Warehouse).html(result['Salessite']);
            j$(TXRule).html(result['TaxClass']);
            j$(TXRate).html(result['taxrate']);
            j$(multiSubTax).val(isNaN(parseFloat(result['amt-tax'])) ? 0.00 : parseFloat(ReplaceString(result['amt-tax'])).toFixed(2));
            j$(multiAddTax).val(isNaN(parseFloat(result['amt+tax'])) ? 0.00 : parseFloat(ReplaceString(result['amt+tax'])).toFixed(2));
            j$(ExtAmt).val(isNaN(parseFloat(result['amt+tax'])) ? 0.00 : parseFloat(ReplaceString(result['amt+tax'])).toFixed(2));
           
            if(param.trim().toLowerCase() == 'quantity')
            {
                if(j$(Quantity).closest('tr').attr('id') == j$('#tblMultipleItems tr:last').attr('id'))
                    fncAddRow();
            }
            
            if(j$('#tblMultipleItems tr').length > 0)
            {
                var LastRowID=j$('#tblMultipleItems tr:last').attr('id');
                var CurrentRowID = j$(Product).closest('tr').attr('id');
            
                if(LastRowID == CurrentRowID)
                {
                    fncAddRow();
                }
            }
            fncCalculateExtAmt(param,index);  
            hideLoading();
        }
       
        function fncRealTimeDataForMultipleItems(param,index)
        {
            //alert('fncRealTimeDataForMultipleItems');
            showLoading();
            
            var ProductFamily = j$('#ProductFamily_'+index);
            var ProductDesc = j$('#ProductDesc_'+index);
            var Product = j$('#Product_'+index);
            
            var ProductId = j$('#ProductId_'+index);
            var Warehouse = j$('#Warehouse_'+index);
            var UOM = j$('#UOM_'+index);
            
            var UnitPrice= j$('#ProductUnitPrice_'+index);
            var Quantity= j$('#ProductQuantity_'+index);
            var ExtAmt = j$('#ProductExtAmt_'+index);
            var QOH = j$('#ProductQOH_'+index);
            var TXClass = j$('#ProductTXClass_'+index);
            
            var TXRule = j$('#ProductTXClass_'+index);
            var TXRate = j$('#ProductTaxRate_'+index);
            
            var multiSubTax =j$('#minusTax_'+index);
            var multiAddTax =j$('#plusTax_'+index);
            
            var ProductCode = j$(Product).val().trim();
            var QuantityOrdered = isNaN(parseFloat(j$(Quantity).val())) ? '0' : j$(Quantity).val();
            
            var PrdMapData={};
            PrdMapData["ProductCode"]=ProductCode ;
            PrdMapData["ProductId"]=j$('#Product_lkid').val();
            PrdMapData["Quantity"]= QuantityOrdered;
            PrdMapData["UOM"]= '';
            PrdMapData["IntegrationId"]=j$('#IntegrationId').val();
            PrdMapData["AccountID"] = j$('#Account_lkid').val();
            PrdMapData["SalesSite"]= j$('#SalesSite').val();
            PrdMapData["ShipmentSite"] = j$('#ShipmentSite').val();
            PrdMapData["grossPrice"]= UnitPrice.val();
            PrdMapData["shipAddr"]= j$('#ShipTo').val();
            PrdMapData["taxRule"]= j$('#TaxRule').val();
            PrdMapData["Discount"]= j$('#Discount').val();
            PrdMapData["currency"]= j$("[id$='Currency']").val();            
            
            if(ProductCode != '')
            {
                try 
                {
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SalesOrderX3Controller.CheckPBEntryExists}',j$("[id$='PricebookId']").val(), ProductCode,
                    function (result, event) 
                    {
                        if (event.status) 
                        {
                            if(result['Exists']=='true')
                            {
                                try 
                                {
                                    if(ProductId != '')
                                        j$('#ProductId_'+index).html(result['Product2Id']);
                                    //ReadRealTimeProductData(JSON.stringify(PrdMapData));
                                    
                                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SalesOrderX3Controller.RealTimeProductData}',JSON.stringify(PrdMapData),
                                    function (result, event) 
                                    {
                                        if (event.status) 
                                        {
                                            debugger;
                                            var validate = result['isvalidate'];
                                            
                                            var Connection = result['Connection'];
                        
                                            if(Connection =='Failed')
                                            {
                                                fncDisplayMultiProdMessage('Info','Unable to connect to the ERP system. Please check connection.');   
                                                j$(Product).focus();
                                                j$(Product).val(''); 
                                                 hideLoading();
                                                return false;
                                            }
                                            
                                            if(validate =='false')
                                            {
                                                fncDisplayMultiProdMessage('Info','please select valid Shipment site');
                                                j$(Product).focus();
                                                j$(Product).val(''); 
                                                 hideLoading();
                                                return false;
                                            }
                                            
                                            var ValidError = result['Error'];
                                            if(ValidError !=undefined)
                                            {
                                                 fncDisplayMultiProdMessage('Info',result['Error']);
                                                 //j$(Product).focus();
                                                 j$(Product).val('');
                                                 fncClearProductData();
                                                 hideLoading();
                                                 return false;
                                            }
                                           // j$(ProductFamily).val(j$(ProductFamily).val());
                                            j$(ProductFamily).val(result['ItemTypeCode']);
                                            
                                            j$(UOM).html(result['UOM']);
                                            
                                            var unitPrice = isNaN(parseFloat(ReplaceString(result['UnitPrice'])).toFixed(2)) ? '0.00' : parseFloat(ReplaceString(result['UnitPrice'])).toFixed(2);
                                              
                                            j$(ProductDesc).html(result['ItemDescription']);
                                            j$(UnitPrice).html(unitPrice);
                                            j$(Quantity).val(parseFloat(ReplaceString(result['Quantity'])));
                        
                                            var Amount = parseFloat(unitPrice) * parseFloat(ReplaceString(result['Quantity'])).toFixed(2);
                        
                                            j$(UnitPrice).val(unitPrice);
                                            
                                            j$(QOH).html(isNaN(parseFloat(ReplaceString(result['QOH'])).toFixed(2)) ? '0.00' : parseFloat(ReplaceString(result['QOH'])).toFixed(2));
                                            
                                            j$(Warehouse).html(result['Salessite']);
                                            j$(TXRule).html(result['TaxClass']);
                                            j$(TXRate).html(result['taxrate']);
                                            j$(multiSubTax).val(isNaN(parseFloat(result['amt-tax'])) ? 0.00 : parseFloat(ReplaceString(result['amt-tax'])).toFixed(2));
                                            j$(multiAddTax).val(isNaN(parseFloat(result['amt+tax'])) ? 0.00 : parseFloat(ReplaceString(result['amt+tax'])).toFixed(2));
                                            j$(ExtAmt).val(isNaN(parseFloat(result['amt+tax'])) ? 0.00 : parseFloat(ReplaceString(result['amt+tax'])).toFixed(2));
                                           
                                            if(param.trim().toLowerCase() == 'quantity')
                                            {
                                                if(j$(Quantity).closest('tr').attr('id') == j$('#tblMultipleItems tr:last').attr('id'))
                                                    fncAddRow();
                                            }
                                            
                                            if(j$('#tblMultipleItems tr').length > 0)
                                            {
                                                var LastRowID=j$('#tblMultipleItems tr:last').attr('id');
                                                var CurrentRowID = j$(Product).closest('tr').attr('id');
                                            
                                                if(LastRowID == CurrentRowID)
                                                {
                                                    fncAddRow();
                                                }
                                            }
                                            fncCalculateExtAmt(param,index);  
                                            hideLoading();
                                        }
                                    }, {buffer: false, escape: true, timeout: 120000 }); 
                                }
                                catch(e) 
                                {
                                    hideLoading();
                                    //fncShowMessage("Error:" + e.message,'Add Product');
                                    fncDisplayMultiProdMessage('Error',e.message);
                                }
                            }
                            else
                            {
                                hideLoading();
                                
                                //fncShowMessage("Please enter valid product code:",'Add Product');
                                fncDisplayMultiProdMessage('Info','Please enter valid product code');
                                j$(ProductFamily).val('');
                                j$(Product).val('');
                                j$(ProductId).val('');
                                
                                j$(Warehouse).html('');
                                j$(UOM).html('');
                                    
                                j$(ProductDesc).html('');
                                j$(UnitPrice).html('0.00');
                                j$(Quantity).val('0');
                    
                                j$(ExtAmt).html('0.00');
                                j$(QOH).html('0.00');
                                j$(TXClass).html('');
                            }
                        }
                    }, {buffer: false, escape: true, timeout: 120000 });
                }
                catch(e) 
                {
                    hideLoading();
                    //fncShowMessage("Error:" + e.message,'Add Product');
                    fncDisplayMultiProdMessage('Error',e.message);
                }   
            }
            else
            {
                hideLoading();
                
                j$(ProductFamily).val('');
                          
                j$(Warehouse).html('');
                j$(UOM).html('');
                    
                j$(ProductDesc).html('');
                j$(UnitPrice).html('0.00');
                j$(Quantity).val('0');
    
                j$(ExtAmt).html('0.00');
                j$(QOH).html('0.00');
                j$(TXClass).html('');
            }
        }
        
        function fncRemoveRow(cntrl)
        {
            j$(cntrl).closest("tr").remove();
        }
        
        function fncSaveOrder(bPromote)
        {
            showLoading();
            
            if(j$("[id$='OrderDate']").val() =='')
            {
                fncDisplayMessage('Info','Enter Order Date');
                hideLoading();
                return;
            } 
            if(j$('#ShipTo').val() =='')
            {
                fncDisplayMessage('Info','Enter Shiping Address ');
                hideLoading();
                return;
            }    
               
            var Account = j$('#Account').val();
            
            var Status = j$("[id$='Status']").html();
            var OrderDate = j$("[id$='OrderDate']").val();
            var ShipVia = j$('#ShipMethod').val();
            var Warehouse = j$('#Warehouse').val();
            var TaxSchedule = j$('#TaxSchedule').val();
            var TermsCode = j$('#TermsCode').val();
            var PaymentType = j$('#Payment').val();
            var LineCount = j$("[id$='LineCount']").val();
            var DocumentType;
                                 
            DocumentType = j$("[id$='DocumentType']").find(":selected").text();          
            gblDocumentType = j$("[id$='DocumentType']").find(":selected").text();
                
            if(Account )//&& Status && OrderDate && ShipVia && Warehouse && TaxSchedule && TermsCode && SalesPerson)
            {
                
                if(parseInt(LineCount) > 0)
                {
                    gblAccountId = j$('#Account_lkid').val();
                    gblIntegrationKey = j$("[id$='IntegrationId']").val();
                    gblLineDetails = j$("[id$='JSONOrderItems']").val();
                    
                    var AccountId = j$('#Account_lkid').val();
                    var IntegrationKey = j$("[id$='IntegrationId']").val();
                    var IntegrationName = j$("[id$='Integration']").html();
                    var LineDetails = j$("[id$='JSONOrderItems']").val();
                    var HeaderObject={};
                    
                    HeaderObject['Integration'] = IntegrationName;
                    HeaderObject['IntegrationKey'] = IntegrationKey;
                    HeaderObject['OrderDate'] = String(OrderDate);
                    HeaderObject['OrderType'] = j$("[id$='orderType']").val();
                    HeaderObject['OrderDescription'] = j$("[id$='OrderDescription']").val();
                    
                    var UniqueKey= j$('#CustomerNo').val().split('-');
                  
                    HeaderObject['AccountId'] = AccountId;
                    HeaderObject['Account'] = Account;
                    HeaderObject['CompanyAuthorizedById'] = j$('#User_lkid').val();
                    HeaderObject['CustomerAuthorizedById'] = j$('#Contact_lkid').val();
                    
                    HeaderObject['Pricebook2Id'] = j$("[id$='PricebookId']").val();
                    HeaderObject['PricebookName'] = j$("[id$='Pricebook']").html();
                    HeaderObject['Currency'] = j$("[id$='Currency']").val();
                    
                    HeaderObject['ARDivisionNo'] = UniqueKey[0];
 
                    HeaderObject['CustomerNo'] = UniqueKey[0];
                    HeaderObject['TotalAmount'] = j$('#OrderTotal_X3').html();
                    HeaderObject['LineTotal'] = isNaN(parseFloat(j$('#LineTotal').html())) ? 0.00 : parseFloat(j$('#LineTotal').html());
   
                    HeaderObject['DocumentType'] = DocumentType;
                    
                    var BillingAddress = j$("[id$='bStreet']").val();
                    
                    var Address1 = '';
                    var Address2 = '';
                    var Address3 = '';
                            
                    if(BillingAddress != null)
                    {
                        var Address = BillingAddress.split('\n');
                        if (Address.length > 2)
                        { 
                            Address1 = Address[0]==null? '' : Address[0];
                            Address2 = Address[1]==null? '' : Address[1];
                            Address3 = Address[2]==null? '' : Address[2];
                        }
                        else if (Address.length > 1)
                        { 
                            Address1 = Address[0]==null? '' : Address[0];
                            Address2 = Address[1]==null? '' : Address[1];
                        }
                        else if (Address.length > 0)
                        { 
                            Address1 = Address[0]==null? '' : Address[0];
                        }
                    }
                    
                    HeaderObject['BillToAddress1'] = Address1;
                    HeaderObject['BillToAddress2'] = Address2;
                    HeaderObject['BillToAddress3'] = Address3;
                    
                    HeaderObject['BillToCity'] = j$("[id$='bCity']").val();
                    HeaderObject['BillToState'] = j$("[id$='bState']").val();
                    HeaderObject['BillToZipCode'] = j$("[id$='bZip']").val();

                    HeaderObject['BillToCountryCode'] = j$("[id$='bCountry']").val();
                    
                    HeaderObject['ShipToCode'] = j$('#ShipTo').val();
                    HeaderObject['ShipToName'] = j$('#ShipTo').val();
                    HeaderObject['SalesSite'] = j$('#SalesSite').val();
                    HeaderObject['ShipmentSite'] = j$('#ShipmentSite').val();
                    HeaderObject['SalesSiteId'] = j$('#SalesSite_lkid').val();
                    HeaderObject['ShipmentSiteId'] = j$('#ShipmentSite_lkid').val();
                    
                    var ShippingAddress = j$("[id$='sStreet']").val();
                    
                    Address1 = '';
                    Address2 = '';
                    Address3 = '';
                            
                    if(ShippingAddress != null)
                    {
                        var Address = ShippingAddress.split('\n');
                        if (Address.length > 2)
                        {
                            Address1 = Address[0]==null? '' : Address[0];
                            Address2 = Address[1]==null? '' : Address[1];
                            Address3 = Address[2]==null? '' : Address[2];
                        }
                        else if (Address.length > 1)
                        { 
                            Address1 = Address[0]==null? '' : Address[0];
                            Address2 = Address[1]==null? '' : Address[1];
                        }
                        else if (Address.length > 0)
                        { 
                            Address1 = Address[0]==null? '' : Address[0];
                        }
                    }
                    
                    HeaderObject['ShipToAddress1'] = Address1;
                    HeaderObject['ShipToAddress2'] = Address2;
                    HeaderObject['ShipToAddress3'] = Address3;
                    

                    HeaderObject['ShipToCity'] = j$("[id$='sCity']").val();
                    HeaderObject['ShipToState'] = j$("[id$='sState']").val();
                    HeaderObject['ShipToZipCode'] =j$("[id$='sZip']").val();

                    HeaderObject['ShipToCountryCode'] = j$("[id$='sCountry']").val();
                    
                    HeaderObject['Shipvia'] = ShipVia;
                    HeaderObject['WarehouseCode'] = Warehouse;
                    HeaderObject['PaymentType'] = PaymentType;
                    
                    
                    HeaderObject['TaxSchedule'] = TaxSchedule;
                    HeaderObject['TermsCode'] = TermsCode;
                   
                    HeaderObject['PrintSalesOrders'] = j$('#PrintOrder').prop('checked') ? 'Y' : 'N';
                    HeaderObject['PrintPickingSheets'] = j$('#PrintPickSheets').prop('checked') ? 'Y' : 'N';
                    HeaderObject['BatchFaxNo'] = j$('#BatchFax').prop('checked') ? 'Y' : 'N';
                    
                    HeaderObject['DiscountType'] =j$('#DiscountType').val(); //j$('#DiscountType').find(":selected").text();
                    HeaderObject['DiscountPC'] = parseFloat(j$('#DiscountPct').val());
                    HeaderObject['DiscountAmt'] = parseFloat(j$('#DiscountAmt').val());
                    HeaderObject['FreightAmt'] = parseFloat(j$("[id$='Freight']").val());
                    HeaderObject['DepositAmt'] = parseFloat(j$("[id$='Deposit']").val());
                    HeaderObject['SalesTaxAmt'] = parseFloat(j$("[id$='SalesTaxAmt']").html());
                    
                    HeaderObject['AmtSubTax'] = parseFloat(j$("[id$='hdrsubTax']").html());
                    HeaderObject['AmtAddTax'] = parseFloat(j$("[id$='hdrAddTax']").html());
                    
                    HeaderObject['OrderRefNo'] = j$( "#OrderRefNo" ).val();
                    HeaderObject['ShipExpireDate'] = j$( "#ShipExpireDate" ).val();
                    HeaderObject['FOB'] = j$( "#FOB" ).val();
                    HeaderObject['ContactName'] = j$( "#Contact" ).val();
                    HeaderObject['UserName'] = j$( "#User" ).val();
                    
                    var JSONDetails = JSON.stringify(HeaderObject);
                    
                    gblJSONDetails = JSONDetails; 
                     
                    var HeaderMap = HeaderObject;          

                    gblHeaderMap = HeaderObject; 
                    gblbPromote = bPromote;   
                                             
                    SaveOrder(JSONDetails);
                                       
                }
                else
                {   
                    //fncShowMessage('Please add line items.','Save');
                    fncDisplayMessage('Info','Please add line items.');
                    hideLoading();
                    return false;
                }
            }
            else
            {
                //fncShowMessage('Please provide required information to promote order.','Save');
                fncDisplayMessage('Info','Please provide required information to promote order.');
                hideLoading();
                return false;
            }
        }
        
        function fncSaveSuccess()
         {
            debugger;
            if(gblbPromote)
            {
                OrderDetails = gblJSONDetails;
                fncPromote(gblAccountId,gblIntegrationKey,gblHeaderMap,gblLineDetails,gblDocumentType);
            }
            else
            {
                hideLoading();
                fncOrderSuccess();
            }    
        }
        
        function fncPromote(AccountId,IntegrationKey,HeaderObject,LineDetails,DocumentType)
        {
             
           var JSONDetails = JSON.stringify(HeaderObject);
           PromoteOrder(IntegrationKey,JSONDetails,LineDetails,DocumentType);
        }
        
        function fncUpdateOrderNo(orderNo)
        {
            if(orderNo !='')
                UpdateOrderNumber(orderNo);
            else 
                hideLoading();
        }
   
        function fncOrderSuccess()
        {
        
           /* if(j$("[id$='DocumentTypeX3']").val().toLowerCase() =='quote')
                j$( "#message" ).html('Quote has been saved successfully.');
            else
                j$( "#message" ).html('Order has been saved successfully.');
            
            j$( "#dialog-message" ).dialog(
            {
                modal:true,
                position: { my: "center", at: "center", of: window },
                resizable: false,
                title: "Save Order",
                height:"auto",
                buttons: 
                {
                    "Ok": function() {
                        j$( this ).dialog( "close" );
                        
                    }
                }
            });
            
            j$( "#dialog-message" ).on( "dialogclose", function( event, ui ) {window.top.location= 'https://'+window.location.host+'/apex/SalesOrderList';} );*/
            
            window.top.location= 'https://'+window.location.host+'/apex/ERPOrderList';
        }
        
        function fncCancel()
        {
            showLoading();
            
            j$('#Account_lkid').val('');
            j$('#Account').val('');
            j$('#ShipTo_lkid').val('');
            j$('#ShipTo').val('');
            
            j$("[id$='OrderDescription']").val('');
            j$("[id$='bStreet']").val('');
            j$("[id$='sStreet']").val('');
            
            j$('#Contact_lkid').val('');
            j$('#Contact').val('');
            j$("[id$='bCity']").val('');
            j$("[id$='sCity']").val('');
            
            j$('#User_lkid').val('');
            j$('#User').val('');
            j$("[id$='bState']").val('');
            j$("[id$='sState']").val('');
            
            j$("[id$='bZip']").val('');
            j$("[id$='sZip']").val('');
            
            j$('#OrderDate').val('');
            j$("[id$='bCountry']").val('');
            j$("[id$='sCountry']").val('');
            
            j$('#OrderDate').val('');
            j$("[id$='bCountry']").val('');
            j$("[id$='SCountry']").val('');
            
            j$("[id$='Integration']").html('');
            j$('#IntegrationId').val('');
            j$("[id$='Pricebook']").html('');
            j$('#PricebookId').val('');
            
            j$('#OrderRefNo').val('');
            j$('#ShipExpireDate').val('');
            j$('#FOB').val('');
            
            j$('#ShipMethod').val('');
            j$('#ShipMethod_lkid').val('');
            j$('#Warehouse').val('');
            j$('#Warehouse_lkid').val('');
            j$('#PrintOrder').prop('checked',false);
            
            j$('#TaxSchedule').val('');
            j$('#TaxSchedule_lkid').val('');
            j$('#TermsCode').val('');
            j$('#TermsCode_lkid').val('');
            j$('#PrintPickSheets').prop('checked',false);
            
            j$('#Payment').val('');
            j$('#Payment_lkid').val('');
            j$('#SalesPerson').val('');
            j$('#SalesPerson_lkid').val('');
            j$('#BatchFax').prop('checked',false);
            
            j$("[id$='ReferenceNo']").val('');
            j$("[id$='Deposit']").val('');
            
            j$("[id$='CCNo']").val('');
            j$("[id$='AuthNo']").val('');
            j$("[id$='AuthAmt']").val('');
            
            fncShowProductLookup('Delete','All')
            
            //hideLoading();
        }

        function fncPopulateAccountData()
        {
            showLoading();
            var AccountId=j$('#Account_lkid').val();
            
            try 
            {
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SalesOrderX3Controller.LoadAccountData}',AccountId,            
                function (result, event) 
                {
                    if (event.status) 
                    {
                        ERPVersion = result['ERPVersion'];
                        
                        var customerNo = result['UniqueKey'];                            
                        j$('#CustomerNo').val(customerNo);                                                                    
                        
                        j$("[id$='bStreet']").val(result['BillingStreet']); 
                        j$("[id$='bState']").val(result['BillingState']);
                        j$("[id$='bZip']").val(result['BillingPostalCode']);
                        j$("[id$='bCountry']").val(result['BillingCountry']);
                        j$("[id$='bCity']").val(result['BillingCity']);
                        
                        j$('#ShipTo').val(result['ShipCode']);
                        j$("[id$='sStreet']").val(result['ShippingStreet']);
                        j$("[id$='sState']").val(result['ShippingState']);
                        j$("[id$='sZip']").val(result['ShippingPostalCode']);
                        j$("[id$='sCountry']").val(result['ShippingCountry']);
                        j$("[id$='sCity']").val(result['ShippingCity']);
                        j$('#Warehouse').val(result['Warehouse']);
                        
                        j$("[id$='Integration']").html(result['Integration']);
                        j$("[id$='IntegrationId']").val(result['IntegrationId']);
                        j$("[id$='Pricebook']").html(result['Pricebook']);
                        j$("[id$='PricebookId']").val(result['PricebookId']);
                        
                        //X3 fields values
                        j$("[id$='Currency']").val(result['Currency']);
                        
                        j$('#TermsCode').val(result['TermsCode']);
                        j$('#TaxSchedule').val(result['TaxSchedule']);
                        j$('#ShipMethod').val(result['ShipMethod']);
                        
                        var strSalesperson = result['Salesperson'];
                        
                        if(strSalesperson.length > 0)
                        {
                            if(strSalesperson.substring(0,2) == result['SalespersonDivisionNo'])
                                j$('#SalesPerson').val(strSalesperson);
                            else
                            {
                                if(result['SalespersonDivisionNo'] != undefined && result['SalespersonNo'] != undefined)
                                    j$('#SalesPerson').val(result['SalespersonDivisionNo']+result['SalespersonNo']);
                            }
                        }
                        else
                        {
                            if(result['SalespersonDivisionNo']!= undefined && result['SalespersonNo']!= undefined)
                                j$('#SalesPerson').val(result['SalespersonDivisionNo']+result['SalespersonNo']);
                        }
                                          
                        glERPSystemName=result['erpSystem'];
                        fncShowProductLookup('Delete','All')
                        
                        hideLoading();
                    }
                }, {buffer: false, escape: true, timeout: 120000 });
            }
            catch (e) 
            {
                fncShowMessage("Error:" + e.message,'Link');
            }           
        }     
        
        //function validating sites and thier product
        function fncvalidateSite()
        {
            showLoading();
            var productcode=j$('#Product').val();
            var siteCode=j$('#ProductSite').val();
            if(productcode=='')
            {
                hideLoading();
                return;
            }    
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SalesOrderX3Controller.validateSite}',j$("[id$='IntegrationId']").val(),siteCode,productcode,            
                function (result, event) 
                {
                    if (event.status) 
                    {
                        if(result == false)
                        {
                            fncShowMessage('Product Site Linkage does not exists. please select valid site','Product Site');
                            hideLoading();
                            return false;
                            
                        }
                         hideLoading();
                    }
                });
        }
        
        function fncPopulateShipToData()
        {
            var ShipToId = j$('#ShipTo_lkid').val();
            
            showLoading();
            debugger;
            try 
            {
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SalesOrderX3Controller.LoadShipAddress}',ShipToId ,
            
                function (result, event) 
                {
                    if (event.status) 
                    {
                        var Street = (result['GUMU_Lite__Ship_To_Address1__c'] != undefined )? result['GUMU_Lite__Ship_To_Address1__c'] : '';
                        Street += (result['GUMU_Lite__Ship_to_Address2__c'] != undefined )? ' '+result['GUMU_Lite__Ship_to_Address2__c'] : '';
                        Street += (result['GUMU_Lite__Ship_To_Address3__c'] != undefined )? ' '+result['GUMU_Lite__Ship_To_Address3__c'] : '';                        
                        
                        j$("[id$='sStreet']").val(Street);
                        j$("[id$='sCity']").val((result['GUMU_Lite__Ship_to_City__c'] != undefined )? result['GUMU_Lite__Ship_to_City__c'] : '');
                        j$("[id$='sState']").val((result['GUMU_Lite__Ship_To_State__c'] != undefined )? result['GUMU_Lite__Ship_To_State__c'] : '');
                        j$("[id$='sZip']").val((result['GUMU_Lite__Ship_To_Zip_Code__c'] != undefined )? result['GUMU_Lite__Ship_To_Zip_Code__c'] : '');
                        j$("[id$='sCountry']").val((result['GUMU_Lite__Ship_to_Country_Code__c'] != undefined )? result['GUMU_Lite__Ship_to_Country_Code__c'] : '');
                        
                        j$("#Warehouse").val((result['GUMU_Lite__Warehouse_Code__c'] != undefined )? result['GUMU_Lite__Warehouse_Code__c'] : '');
                        j$('#TaxSchedule').val((result['GUMU_Lite__Tax_Schedule__c'] != undefined )? result['GUMU_Lite__Tax_Schedule__c'] : '');
                        
                        hideLoading();
                    }
                }, {buffer: false, escape: true, timeout: 120000 });
            }
            catch (e) 
            {
                fncShowMessage("Error:" + e.message,'Link');
            }
        }
        
        function fncShowMessage(message,strTitle)
        {
            j$( "#message" ).html(message);
            j$( "#dialog-message" ).dialog({ modal:true,title:strTitle, position: { my: "center", at: "center", of: window }, buttons: { Ok: function() { j$( this ).dialog( "close" );}}});
        }
        
        function fncPaymentTypeChanged(cntrl)
        {
            j$("[id$='ReferenceNo']").val('');
            j$("[id$='Deposit']").val('0.00');
            j$("[id$='CCNo']").val('');
            j$("[id$='AuthNo']").val('');
            j$("[id$='AuthAmt']").val('0.00');
            
            sforce.connection.sessionId = "{!$Api.Session_ID}";
            var squery="SELECT GT_GUMU_Pro__Payment_Method__c FROM GT_GUMU_Pro__Payment_Type__c Where GT_GUMU_Pro__Payment_Type_Code__c='"+j$(cntrl).val()+"'";
            var qr= sforce.connection.query(squery);
            var records = qr.getArray("records");
            
            var payMethod;
            if(records.length > 0)
                payMethod=records[0]['GT_GUMU_Pro__Payment_Method__c'];
                        
           switch (payMethod)
            {
                case 'CASH':
                case 'CHECK':
                    j$('.CashRow').show();
                    j$('.CreditRow').hide();
                    break;
                case 'CREDIT CARD':
                                     
                    j$('.CreditRow').show();
                    j$('.CashRow').hide();
                    break;
                default:
                    break;                    
            }                         
        }
                
        function fncShowProductLookup(mode,index)
        { 
            showLoading();
            
            var strTitle = '';
            var Buttons;
            if(mode.toLowerCase() == 'delete')
            {
                if(index.toString().toLowerCase() != 'all')
                {
                    hideLoading();
                    var result = confirm("Are you sure? You want to remove this line");
                    
                    if (result ) 
                    {
                        showLoading();
                        RefrshDetails('', index , mode,j$("[id$='IntegrationId']").val(),j$('#CustomerNo').val(),j$('#TaxSchedule').val());
                    }
                }
                else
                {
                    RefrshDetails('', index , mode,j$("[id$='IntegrationId']").val(),j$('#CustomerNo').val(),j$('#TaxSchedule').val());
                }
            }
            else
            {
                if(j$('#SalesSite').val() =='')
                {
                     hideLoading();
                     //fncShowMessage('Please select Sales Site.','Sales Order');
                     fncDisplayMessage('Info','Please select Sales Site.');
                     return false;
                }
                else if(j$('#ShipmentSite').val() =='')
                {
                     hideLoading();
                     //fncShowMessage('Please select Shipment Site.','Sales Order');
                     fncDisplayMessage('Info','Please select Shipment Site.');
                     return false;
                }
                else if(j$('#Currency').val() =='')
                {
                     hideLoading();
                     //fncShowMessage('Please select Currency.','Sales Order');
                     fncDisplayMessage('Info','Please select Currency.');
                     return false;
                }
                
                if(j$("[id$='Account']").val() != '' && j$("[id$='Account']").val() != undefined)
                {
                    if(j$("[id$='PricebookId']").val() != '' && j$("[id$='PricebookId']").val() != undefined)
                    {
                        LoadItem(index);
                        
                        j$('#DialogMode').attr('mode',mode);
                        j$('#ItemIndex').attr('index',index);
                        
                        if(mode.toLowerCase() == 'edit') 
                        {                         
                            strTitle = 'Edit Product';
                            Buttons = 
                            {
                                "Update": function() 
                                {
                                    var Product = j$('#Product').val();
                                    var Quantity = j$('#Quantity').val();
                                    var QuotedPrice = j$('#QuotedPrice').val();
                                    
                                    if(Product && Quantity && QuotedPrice )
                                    {
                                        fncAddLineItem();
                                        j$( this ).dialog( "close" );
                                    }
                                    else
                                    {
                                        alert('Please provide required information to add line items.');
                                    }
                                },
                                Cancel: function() { j$( this ).dialog( "close" );}
                            }                           
                        }
                        else 
                        {
                            strTitle = 'Add Product';                            
                            Buttons = 
                            {
                                "Add": function() 
                                {
                                    var Product = j$('#Product').val();
                                    var Quantity = j$('#Quantity').val();
                                    var QuotedPrice = j$('#QuotedPrice').val();
                                    
                                    if(Product && Quantity && QuotedPrice )
                                    {
                                        fncAddLineItem();
                                        j$( this ).dialog( "close" );
                                    }
                                    else
                                    {
                                        hideLoading();
                                        alert('Please provide required information to add line items.');
                                    }
                                },
                                Cancel: function() 
                                {
                                    j$( this ).dialog( "close" );
                                }
                            }
                        }
                                                
                        j$( "#dialogSingleProduct" ).dialog(
                        {
                            resizable: false,
                            title: strTitle,
                            height:"auto",
                            width:1050,
                            modal: true,
                            buttons: Buttons                            
                        });
                        
                        j$("#dialogSingleProduct").on( "dialogclose", function( event, ui ) 
                        {
                            fncClearProductData();
                        });
                        
                        hideLoading();
                    }
                    else
                    {
                        hideLoading();
                        fncShowMessage('ERP Pricebook is not available for '+ j$('#Integration').val()+'. Please import products.','Add Product');
                    }
                }
                else
                {
                    hideLoading();
                    //fncShowMessage('Please select the Account first.','Add Product');
                    fncDisplayMessage('Info','Please select the Account first.');
                } 
            } 
        }
   
        function fncProductFamilyChange(issetdefault)
        {
            if(issetdefault)
            {
                j$('#Product_lkid').val('');
                j$('#Product').val('');
                j$('#ProductDescription').val('');
                j$('#ProductWarehouse_lkid').val('');
                j$('#ProductWarehouse').val('');
                j$('#UOM_lkid').val('');
                j$('#UOM').val('');
                j$('#TaxClass_lkid').val('');
                j$('#TaxClass').val('');
                j$('#TaxRule').val('');
                j$('#ListPrice').html('0.00');
                j$('#QuotedPrice').val('0.00');
                j$('#Discount').val('0.00');
                j$('#QOH').html('0.00');
                j$('#Quantity').val('1');//1.00
                j$('#ProductComments').val('');
                j$("[id$='Commissionable']").prop('checked', false);
                j$("[id$='DropShip']").prop('checked', false);
                //j$('#ExtendedPrice').html('0.00');
                j$('#ExtendedPrice').val('0.00');   
            }
            var Family = j$('#ProductFamily').val();

            switch (Family.toLowerCase())
            {
                case 'charge': //Charge Item
                    j$('#ProductWarehouse').prop('disabled',true);
                    j$('#UOM').prop('disabled',true);
                    j$('#TaxClass').prop('disabled',false);
                    j$('#QuotedPrice').prop('disabled',true);
                    j$('#Discount').prop('disabled',true);
                    j$('#Quantity').prop('disabled',true);
                    j$("[id$='Commissionable']").prop('disabled',false);
                    j$("[id$='DropShip']").prop('disabled',true);
                    j$('#ExtendedPrice').prop('disabled',false);
                    break;
        
                case 'comment': //Comment Item
                    j$('#ProductWarehouse').prop('disabled',true);
                    j$('#UOM').prop('disabled',true);
                    j$('#TaxClass').prop('disabled',true);
                    j$('#QuotedPrice').prop('disabled',true);
                    j$('#Discount').prop('disabled',true);
                    j$('#Quantity').prop('disabled',true);
                    j$("[id$='Commissionable']").prop('disabled',true);
                    j$("[id$='DropShip']").prop('disabled',true);
                    j$('#ExtendedPrice').prop('disabled',true);                 
                    break;
                
                case 'miscellaneous': //Miscellaneous Item
                    j$('#ProductWarehouse').prop('disabled',true);
                    j$('#UOM').prop('disabled',false);
                    j$('#TaxClass').prop('disabled',false);
                    j$('#QuotedPrice').prop('disabled',false);
                    j$('#Discount').prop('disabled',true);
                    j$('#Quantity').prop('disabled',false);
                    j$("[id$='Commissionable']").prop('disabled',false);
                    j$("[id$='DropShip']").prop('disabled',false);
                    j$('#ExtendedPrice').prop('disabled',true);
                    break;  
                 
                 default: //Regular Item
                    j$('#ProductWarehouse').prop('disabled',false);
                    j$('#UOM').prop('disabled',false);
                    j$('#TaxClass').prop('disabled',false);
                    j$('#QuotedPrice').prop('disabled',false);
                    j$('#Discount').prop('disabled',false);
                    j$('#Quantity').prop('disabled',false);
                    j$("[id$='Commissionable']").prop('disabled',false);
                    j$("[id$='DropShip']").prop('disabled',false);
                    j$('#ExtendedPrice').prop('disabled',false);
                    break;        
            }
        }
        
        function fncClearProductData()
        {
            j$('#ProductFamily_lkid').val('');
            j$('#ProductFamily').val('');
            j$('#Product_lkid').val('');
            j$('#Product').val('');
            j$('#ProductDescription').val('');
            j$('#ProductWarehouse_lkid').val('');
            j$('#ProductWarehouse').val('');
            j$('#UOM_lkid').val('');
            j$('#UOM').val('');
            j$('#TaxClass_lkid').val('');
            j$('#TaxClass').val('');
            
            j$('#TaxRule_lkid').val('');
            j$('#TaxRule').val('');
            j$('#ProductSite').val('');
            j$('#ListPrice').html('');
            j$('#QuotedPrice').val('');
            j$('#Discount').val('');
            j$('#QOH').html('');
            j$('#Quantity').val('');
            j$('#ProductComments').val('');
            j$("[id$='Commissionable']").prop('checked', false);
            j$("[id$='DropShip']").prop('checked', false);
            //j$('#ExtendedPrice').html('');
            j$('#ExtendedPrice').val('');    
            
            j$('#plusTax').html('');
            j$('#minustax').html('');             
        }
        
        function fncGetProductData(cntrl)
        {
            showLoading();
            debugger;
            var PrdMapData={};
            PrdMapData["ProductCode"]=j$('#Product').val();
            PrdMapData["ProductId"]=j$('#Product_lkid').val();
            PrdMapData["Quantity"]= j$('#Quantity').val();
            PrdMapData["UOM"]= j$('#UOM').val();
            PrdMapData["IntegrationId"]=j$('#IntegrationId').val();
            PrdMapData["AccountID"] = j$('#Account_lkid').val();
            PrdMapData["SalesSite"]= j$('#SalesSite').val();
            PrdMapData["ShipmentSite"] = j$('#ShipmentSite').val();
            PrdMapData["grossPrice"]= j$('#QuotedPrice').val();
            PrdMapData["shipAddr"]= j$('#ShipTo').val();
            PrdMapData["taxRule"]= j$('#TaxRule').val();
            PrdMapData["Discount"]= j$('#Discount').val();
            PrdMapData["currency"]= j$("[id$='Currency']").val();
            
            var ProductCode = j$('#Product').val();
            var ProductId = j$('#Product_lkid').val();
            
            try 
            {
            
                //ReadRealTimeProductData(JSON.stringify(PrdMapData));
                
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.SalesOrderX3Controller.RealTimeProductData}',JSON.stringify(PrdMapData),
              
                function (result, event) 
                {
                    if (event.status) 
                    {
                       debugger;
                        var validate = result['isvalidate'];
                        var Connection = result['Connection'];
                        
                        if(Connection =='Failed')
                        {
                            fncDisplayDialogMessage('Info','Unable to connect to the ERP system. Please check connection.');   
                            j$('#Product').val('');
                             hideLoading();
                            return false;
                        }
                        
                        if(validate =='false')
                        {
                            //alert("please select valid Shipment site",'Sales Site');
                            fncDisplayDialogMessage('Info','please select valid Shipment site');   
                            j$('#Product').val('');
                             hideLoading();
                            return false;
                        }                       
                        var ValidError = result['Error'];
                        if(ValidError !=undefined)
                        {
                             //alert(result['Error'],'Sales Site');
                             fncDisplayDialogMessage('Info',result['Error']); 
                             j$('#Product').val('');
                             fncClearProductData();
                             hideLoading();
                             return false;
                        }
                        
                        j$('#ProductFamily').val(result['ItemTypeCode']);
                        
                        var UnitPrice = result['UnitPrice'];
                        if(UnitPrice == undefined)
                            UnitPrice='0.00';
                            
                        fncProductFamilyChange(true);
                        
                        j$('#Product').val(ProductCode);
                        j$('#Product_lkid').val(ProductId);
                        
                        j$('#ProductDescription').val(j$('<div/>').html(result['ItemDescription']).text());
                        
                        j$('#UOM').val(result['UOM']);
                        j$('#TaxRule').val(result['TaxClass']);
                        j$('#TaxRate').val(result['taxrate']);
                        j$('#ProductWarehouse').val(result['Salessite']);
                            
                        j$('#ProductSite').val(result['Salessite']);
                        j$('#ListPrice').html(parseFloat(ReplaceString(UnitPrice)).toFixed(2));

                        j$('#Discount').val(parseFloat(ReplaceString(result['discountper'])).toFixed(2));
                        j$('#QuotedPrice').val(parseFloat(ReplaceString(UnitPrice)).toFixed(2));

                        j$('#minustax').html(isNaN(parseFloat(result['amt-tax'])) ? 0.00 : parseFloat(ReplaceString(result['amt-tax'])).toFixed(2));
                        j$('#plusTax').html(isNaN(parseFloat(result['amt+tax'])) ? 0.00 : parseFloat(ReplaceString(result['amt+tax'])).toFixed(2));

                        j$('#hdrMinustax').html(isNaN(parseFloat(result['hdr-Tax'])) ? 0.00 : parseFloat(ReplaceString(result['hdr-Tax'])).toFixed(2));
                        j$('#hdrPlusTax').html(isNaN(parseFloat(result['hdr+Tax'])) ? 0.00 : parseFloat(ReplaceString(result['hdr+Tax'])).toFixed(2));
                                
                        j$('#QOH').html(result['QOH']);
                        j$('#Quantity').val(isNaN(parseFloat(result['Quantity'])) ? 0 :parseFloat(ReplaceString(result['Quantity'])));
                       
                        //j$('#netprice').html(parseFloat(ReplaceString(result['netPrice'])).toFixed(2));
                        fncCalculateItemPrice()
                        hideLoading();
                    }
                }, {buffer: false, escape: true, timeout: 120000 }); 
            }
            catch (e) 
            {
                //fncShowMessage("Error:" + e.message,'Link');
                fncDisplayDialogMessage('Error',e.message);
            }            
        }
        
        function ReplaceString(str) {
            
            str = str.replace(/,/g , '');
            return str;
        }
        
        function floorFigure(figure, decimals){
            if (!decimals) decimals = 2;
            var d = Math.pow(10,decimals);
            return (parseInt(figure*d)/d).toFixed(decimals);
        };

        function fncCalculateItemPrice()
        {
            var Discount = j$('#Discount').val() != '' ? parseFloat(j$('#Discount').val()).toFixed(2) : 0.00; 
            var Quantity = j$('#Quantity').val() != '' ? parseFloat(j$('#Quantity').val()).toFixed(2) : 0.00; 
            var QuotedPrice = j$('#QuotedPrice').val() != '' ? parseFloat(j$('#QuotedPrice').val()).toFixed(2) : 0.00;          
            var ExtendedPrice;
           
            if(glERPSystemName=='SageERPX3' || ERPSystemName =='SageERPX3')
            {
                QuotedPrice = j$('#QuotedPrice').val() != '' ? parseFloat(j$('#QuotedPrice').val()).toFixed(4) : 0.00; 
            }
            else
            {
                QuotedPrice = j$('#QuotedPrice').val() != '' ? parseFloat(j$('#QuotedPrice').val()).toFixed(2) : 0.00; 
            }
            
            if(Quantity != NaN && QuotedPrice != NaN)
            {
                 ExtendedPrice = QuotedPrice * Quantity;
                 
                  if(Discount != NaN)
                  {
                      if(glERPSystemName=='SageERPX3' || ERPSystemName =='SageERPX3')
                      {   
                          var valueAddedTax = j$('#plusTax').html() != '' ? parseFloat(j$('#plusTax').html()).toFixed(2) : 0.00;
                          var valueNegTax = j$('#minustax').html() != '' ? parseFloat(j$('#minustax').html()).toFixed(2) : 0.00;
                          
                          //valueAddedTax -= valueAddedTax * (Discount / 100);
                          valueNegTax   -= valueNegTax * (Discount / 100);
                          
                          j$('#ExtendedPrice').val(parseFloat(valueAddedTax).toFixed(2));
                      }                      
                      else
                      {
                          ExtendedPrice -= ExtendedPrice * (Discount / 100);
                          j$('#ExtendedPrice').val(parseFloat(ExtendedPrice ).toFixed(2));
                      }                      
                  }                      
                  //j$('#Discount').val(Discount);                 
            }
        }
        
        function fncAddLineItem()
        {
            showLoading();
            
            var Mode = j$('#DialogMode').attr('mode');
            var index = j$('#ItemIndex').attr('index');
            
            var iMap = {};
            
            iMap["ItemType"] = j$('#ProductFamily').val();
            iMap["ItemCode"] = j$('#Product').val();
            iMap["ProductId"] = j$('#Product_lkid').val();
            if(glERPSystemName =='SageERPX3' ||ERPSystemName =='SageERPX3')
            {
                iMap["WarehouseCode"] = j$('#ProductSite').val();
                 iMap["TaxClass"] = j$('#TaxRule').val();
            }
            else
            {
                iMap["WarehouseCode"] = j$('#ProductWarehouse').val();
                 iMap["TaxClass"] = j$('#TaxClass').val();
            }
            iMap["UOM"] = j$('#UOM').val();
                     
            iMap["ListPrice"] = isNaN(parseFloat(j$('#ListPrice').html()).toFixed(2)) ? 0.00 : parseFloat(j$('#ListPrice').html()).toFixed(2);
            iMap["UnitPrice"] = isNaN(parseFloat(j$('#QuotedPrice').val()).toFixed(2)) ? 0.00 : parseFloat(j$('#QuotedPrice').val()).toFixed(2);
            iMap["Discount"] = isNaN(parseFloat(j$('#Discount').val()).toFixed(2)) ? 0.00 : parseFloat(j$('#Discount').val()).toFixed(2);
            iMap["QOH"] = j$('#QOH').html();
            iMap["QuantityOrdered"] = j$('#Quantity').val();
            iMap["ItemDescription"] = j$('#ProductDescription').val();
            iMap["Comments"] = j$('#ProductComments').val();
            iMap["Commissionable"] = j$("[id$='Commissionable']").prop('checked') ? 'Y' : 'N';
            iMap["DropShip"] = j$("[id$='DropShip']").prop('checked') ? 'Y' : 'N';
            //iMap["ExtensionAmt"] = parseFloat(j$('#ExtendedPrice').html()).toFixed(2);
            iMap["ExtensionAmt"] = isNaN(parseFloat(j$('#ExtendedPrice').val()).toFixed(2)) ? 0.00 : parseFloat(j$('#ExtendedPrice').val()).toFixed(2);
            iMap["minusTax"] = isNaN(parseFloat(j$('#minustax').html()).toFixed(2)) ? 0.00 : parseFloat(j$('#minustax').html()).toFixed(2);
            iMap["plusTax"] = isNaN(parseFloat(j$('#plusTax').html()).toFixed(2))? 0.00 : parseFloat(j$('#plusTax').html()).toFixed(2);
            RefrshDetails(JSON.stringify(iMap) , index , Mode,j$("[id$='IntegrationId']").val(),j$('#CustomerNo').val(),j$('#TaxSchedule').val());
                        
            //fncClearProductData();
        }
        
        function fncToggleDiscountType(Cntl)
        {
            var Type = j$(Cntl).find(":selected").text();
            
            switch(Type.toLowerCase())
            {
                case '-- none --' :
                    j$("[id$='DiscountAmt']").val('0.00').prop('disabled', true);
                    j$("[id$='DiscountPct']").val('0.00').trigger('change').prop('disabled', true);
                    break;
                case 'percentage' :
                    
                    j$("[id$='DiscountAmt']").prop('disabled', true);
                    j$("[id$='DiscountPct']").prop('disabled', false);
                    break;
                case 'amount' :
                   
                     j$("[id$='DiscountAmt']").prop('disabled', false);                                    
                     j$("[id$='DiscountPct']").prop('disabled', true);
                    
                    break;
            }            
            fncCalculateTotal();
        }
        
        function fncCalculateTotal()
        {
            var Freight = isNaN(parseFloat(j$("[id$='Freight']").val())) ? 0.00 : parseFloat(j$("[id$='Freight']").val());
            var SalesTaxAmount = isNaN(parseFloat(j$("[id$='SalesTaxAmt']").html())) ? 0.00 : parseFloat(j$("[id$='SalesTaxAmt']").html());
            //var SalesTaxAmount = isNaN(parseFloat(j$('#SalesTaxAmt').html())) ? 0.00 : parseFloat(j$('#SalesTaxAmt').html());
            var LineTotal = isNaN(parseFloat(j$('#LineTotal').html())) ? 0.00 : parseFloat(j$('#LineTotal').html());
            var DiscountType = j$('#DiscountType').find(":selected").text();
            var DiscountAmt = isNaN(parseFloat(j$('#DiscountAmt').val())) ? 0.00 : parseFloat(j$('#DiscountAmt').val());
            var DiscountPct = isNaN(parseFloat(j$('#DiscountPct').val())) ? 0.00 : parseFloat(j$('#DiscountPct').val());
            var GrossTotal = isNaN(parseFloat(j$('#GrossTotal').html())) ? 0.00 : parseFloat(j$('#GrossTotal').html());
            var OrderTotal = isNaN(parseFloat(j$('#OrderTotal').html())) ? 0.00 : parseFloat(j$('#OrderTotal').html());
            var OrderTotalX3 = isNaN(parseFloat(j$('#OrderTotal_X3').html())) ? 0.00 : parseFloat(j$('#OrderTotal_X3').html());
            var Deposit = isNaN(parseFloat(j$("[id$='Deposit']").val())) ? 0.00 : parseFloat(j$("[id$='Deposit']").val());
            var LineCount = parseInt(j$('#LineCount').val());
            
            if(LineTotal > 0)
            {
                switch(DiscountType.toLowerCase())
                {
                    case '-- none --' :
                        DiscountAmt = 0.00;
                        DiscountPct = 0.00;
                        break;
                        
                    case 'percentage' :
                        if(DiscountPct > 0)
                        {
                            DiscountAmt = parseFloat(LineTotal * DiscountPct / 100).toFixed(2) ;
                        }
                        else
                        {
                            DiscountAmt = 0.00;
                            DiscountPct = 0.00; 
                        }
                        break;
                        
                    case 'amount' :
                        if(DiscountAmt > 0)
                        {
                            DiscountPct = parseFloat((DiscountAmt / LineTotal) * 100).toFixed(2);   
                        }
                        else
                        {
                            DiscountAmt = 0.00;
                            DiscountPct = 0.00;
                        }
                        break;
                }
             } 
             else
             {
                DiscountAmt = 0.00;
                DiscountPct = 0.00;
             }  
             
             GrossTotal = parseFloat(parseFloat(LineTotal).toFixed(2) - parseFloat(DiscountAmt).toFixed(2)).toFixed(2);
             
             OrderTotal = parseFloat(
                             parseFloat(GrossTotal) + 
                             parseFloat(Freight) + 
                             parseFloat(SalesTaxAmount) -
                             parseFloat(Deposit)
                         ).toFixed(2);
             
             OrderTotalX3 = parseFloat(
                             parseFloat(GrossTotal)                                                          
                         ).toFixed(2);
             
             j$('#DiscountAmt').val(parseFloat(DiscountAmt).toFixed(2));
             j$('#DiscountPct').val(parseFloat(DiscountPct).toFixed(2));
             j$('#GrossTotal').html(parseFloat(GrossTotal).toFixed(2));
             j$('#OrderTotal').html(parseFloat(OrderTotal).toFixed(2));
             j$('#OrderTotal_X3').html(parseFloat(OrderTotalX3).toFixed(2));
             j$('#hdrsubTax').html(j$('#linesubtaxTotal').val());
             j$('#hdrAddTax').html(j$('#lineaddtaxTotal').val());
        }
        
        function fncShowMultipleItmLkp()
        {           
            if(j$("[id$='Account']").val() != '' && j$("[id$='Account']").val() != undefined)
            {               
                if(glERPSystemName == 'SageERPX3')
                {
                    if(j$('#SalesSite').val() =='')
                    {
                         hideLoading();
                         //fncShowMessage('Please select Sales Site.','Sales Order');
                         fncDisplayMessage('Info','Please select Sales Site.');
                         return false;
                    }
                    else if(j$('#ShipmentSite').val() =='')
                    {
                         hideLoading();
                         //fncShowMessage('Please select Shipment Site.','Sales Order');
                         fncDisplayMessage('Info','Please select Shipment Site.');
                         return false;
                    }
                   else if(j$('#Currency').val() =='')
                    {
                         hideLoading();
                         //fncShowMessage('Please select Shipment Site.','Sales Order');
                         fncDisplayMessage('Info','Please select Currency.');
                         return false;
                    }
                }  
            
                j$( "#divMultipleItems" ).dialog(
                {
                    resizable: false,
                    height:"auto",
                    width:1150,
                    modal: true,
                    title: "Add Multiple Products",
                    buttons: 
                    {
                        "Add": function()
                        {
                        
                          showLoading();
                          debugger;
                          if(j$('#tblMultipleItems tr').length > 0)
                            {

                                var lines =new Array();
                            
                                //j$('#tblMultipleItems > tbody  > tr').each(function() 
                                //for (var i=0; i < j$('#tblMultipleItems tr').length - 1; i++ )
                                for (var i=0; i < j$('#tblMultipleItems tr').length; i++ )
                                {
    
                                    //var index = j$(this).attr('id').replace('row_','');
                                    var index = j$('#tblMultipleItems tr').eq(i).attr('id').replace('row_','');
                                    

                                    var ItemType = j$('#ProductFamily_'+index).val();
                                    var ItemCode = j$('#Product_'+index).val();
                                    var ItemDescription = j$('#ProductDesc_'+index).html();
                                    
                                    var ProductId = j$('#ProductId_'+index).html();
                                    var WarehouseCode = j$('#Warehouse_'+index).html();
                                    var ProductSite = j$('#Warehouse_'+index).html();
                                    
                                    var UOM = j$('#UOM_'+index).html();
                                    
                                    //var UnitPrice = j$('#ProductUnitPrice_'+index).html();
                                    var UnitPrice = j$('#ProductUnitPrice_'+index).val();
                                    var QuantityOrdered = j$('#ProductQuantity_'+index).val();
                                    var ExtensionAmt = j$('#ProductExtAmt_'+index).val();
                                    var QOH = j$('#ProductQOH_'+index).html();
                                    var TaxClass = j$('#ProductTXClass_'+index).html();
                                     var TaxRule = j$('#ProductTXClass_'+index).html();
                                    var ProdComment = j$('#ProductComment_'+index).val();
                                    var multiLinesubTax='0.00';
                                    var multiLineAddTax='0.00';
                                    if(glERPSystemName =='SageERPX3' ||ERPSystemName =='SageERPX3')
                                    {
                                        var multiLinesubTax=j$('#minusTax_'+index).val();
                                        var multiLineAddTax=j$('#plusTax_'+index).val();
                                    }
                                    
                                    if(ProductId == '' && ItemCode == '')
                                    {
                                        continue;
                                    }
                                    
                                    if(ProductId && ItemCode && QuantityOrdered)
                                    {   
                                        var line ={};
                                     
                                        line['Selection'] = '';
                                        line['LineNo'] = '';
                                                                           
                                        line['ItemCode'] = ItemCode;
                                        line['ItemType'] = ItemType ;
                                        line['ProductId'] = ProductId;
                                        line['WarehouseCode'] = WarehouseCode;
                                        line['WarehouseCode'] = ProductSite;
                                        line['UOM'] = UOM;
                                        line['TaxClass'] = TaxClass;
                                        line['TaxClass'] = TaxRule;
                                        line['ListPrice'] = UnitPrice;
                                        line['UnitPrice'] = UnitPrice;
                                        line['Discount'] = '0.00';
                                        line['QOH'] = QOH;
                                        line['QuantityOrdered'] = QuantityOrdered;
                                        line['Comments'] = ProdComment;
                                        line['ItemDescription'] = ItemDescription;
                                        line['ExtensionAmt'] = ExtensionAmt;
                                        line['minusTax'] = multiLinesubTax;
                                        line['plusTax'] = multiLineAddTax;
                                        line['Commissionable'] = 'N';
                                        line['DropShip'] = 'N';
                                        
                                        lines.push(line);
                                    }
                                    else
                                    {

                                        hideLoading();
                                        
                                        j$( "#message" ).html('Please enter valid product and quantity.');
                                        j$( "#dialog-message" ).dialog(
                                        {
                                            modal:true,
                                            title:'Add Multiple Products', 
                                            position: { my: "center", at: "center", of: window }, 
                                            buttons: 
                                            {
                                                Ok: function() { j$( "#dialog-message" ).dialog( "close" );}
                                            }
                                        });
                                        
                                        j$( "#dialog-message" ).on( "dialogclose", function( event, ui ) 
                                        {
                                            j$('#Product_'+index).focus(); 
                                        });
                                        
                                        return;
                                    }
                                }
    
                                AddMultiLineItem(j$("[id$='IntegrationId']").val(),j$('#CustomerNo').val(),j$('#TaxSchedule').val(),JSON.stringify(lines));

                                j$( this ).dialog( "close" );
                            }
                            else
                            {
                                hideLoading();
                                //fncShowMessage('Please add line items.','Add Multiple Products');
                                 fncDisplayMessage('Info','Please add line items.');
                            }
                        },
    
                        Cancel: function() 
                        { 
                             
                            j$( this ).dialog( "close" );
                        }
                    }
                });
  
                j$( "#divMultipleItems" ).on( "dialogclose", function( event, ui ) 
                {
                    j$("#tblMultipleItems tr").remove(); 
                });
               if(glERPSystemName =='SageERPX3' || ERPSystemName=='SageERPX3')
                {
                    j$('#tdaddTax').show();
                    j$('#tdsubTax').show();
                    j$('#tdComment').hide();
                }              
            }
            else
            {
                hideLoading();
                //fncShowMessage('Please select the Account first.','Add Product');
                fncDisplayMessage('Info','Please select the Account first.');
            }
        }

        function fncAdjustWidth()
        {
            var rowCount = j$('#AccountList tr').length;
            if(rowCount > 10)
                j$('#AccountList').css('width','101.75%');
            else
                j$('#AccountList').css('width','100%');
        }
        
        function ReplaceString(str) 
        {
            if (str !=undefined)
                str = str.replace(/,/g , '');
             else
                str = '0.00';
            return str;
        }

        function fncOpenLookup(LookupFor) 
        {
            if(j$('Account_lkid').val() !='')
            {
                var sDocumentType = j$("[id$='DocumentType']").val().toLowerCase();
                
                if(LookupFor == 'Product') 
                {                
                    if(sDocumentType === 'order') 
                    {
                        openLookup('Product','frmPromote','{!JSENCODE(PBEntryOjectPrefix)}','Name','GUMU_Lite__Product_Description__c','GUMU_Lite__ERP_PrdFamily_Code__c','','','Pricebook2Id',j$("#PricebookId").val(),'equal','GUMU_Lite__ERP_PrdFamily_Code__c',j$("#ProductFamily").val(),'equal');
                    } else {
                        var sField = 'ERP_PrdFamily_Code__c';
                        var sCriteriaValue = 'Charge_Comment_Miscellaneous';
                        var sOperater = 'IN';
                        openLookup('Product','frmPromote','{!JSENCODE(PBEntryOjectPrefix)}','ProductCode','GUMU_Lite__Product_Desciption__c','GUMU_Lite__ERP_PrdFamily_Code__c','','','Pricebook2Id',j$("#PricebookId").val(),'equal','GUMU_Lite__ERP_PrdFamily_Code__c',j$("#ProductFamily").val(),'equal',sField,sCriteriaValue,sOperater);
                    }  
                } else {
                    if(sDocumentType === 'order') {
                        openLookup('ProductFamily','frmPromote','{!JSENCODE(ProductFamilyObjectPrefix)}','GUMU_Lite__ERP_Product_Family_Code__c','GUMU_Lite__ERP_Product_Family_Description__c','','','','GUMU_Lite__Integration_Key__c',j$('#IntegrationId').val(),'equal','','','');
                    } else {
                        var sField = 'ERP_PrdFamily_Code__c';
                        var sCriteriaValue = 'Charge_Comment_Miscellaneous';
                        var sOperater = 'IN';
                        openLookup('ProductFamily','frmPromote','{!JSENCODE(ProductFamilyObjectPrefix)}','GUMU_Lite__ERP_Product_Family_Code__c','GUMU_Lite__ERP_Product_Family_Description__c','','','','GUMU_Lite__Integration_Key__c',j$('#IntegrationId').val(),'equal','','','',sField,sCriteriaValue,sOperater);
                    }  
                }
            } else 
            {
                //fncShowMessage('Please select the Account first.','Sales Order');
                fncDisplayMessage('Info','Please select the Account first.');
            }
        }
        
        // Function to toggle fields Based on the Document Type
        function fncToggleFieldsOnDocumentType(DocumenType) {
            
            if(DocumenType == 'Invoice') {
                j$('#lblPaymentType').hide();
                j$('#lkpPaymentType').hide();
                j$('#lblPrintPickSheets').hide();
                j$('#PrintPickSheets').hide();
                j$('#requiredBlockShipMethod').removeClass();
                j$('#DiscountType').val('-- none --');
                j$('#DiscountType').attr('disabled','disabled');
            } else {
                j$('#lblPaymentType').show();
                j$('#lkpPaymentType').show();
                j$('#lblPrintPickSheets').show();
                j$('#PrintPickSheets').show();
                j$('#requiredBlockShipMethod').addClass('requiredBlock');
                j$('#DiscountType').removeAttr('disabled');
            }
        }
        
        function SetPreviousValue(DocumentType) {
            
            if(parseInt(j$('#LineCount').val()) > 0)
            {
                //fncShowMessage('You cannot change Document Type. Please remove all the product(s) added to the grid.','Sales Order');
                fncDisplayMessage('Warning','You cannot change Document Type. Please remove all the product(s) added to the grid.');
                return false;
            }
        }
        
        function loadCreditcarddetails()
        {
            var integrationkey=j$("[id$='IntegrationId']").val();
     
            var customerNo=j$('#CustomerNo').val();          
        }
               
        function fncGetHeaderTableHtml()
        {
            var sGridHTML='';
            sGridHTML +='<div>';
            sGridHTML +='<table border="1" cellpadding="0" cellspacing="0" class="list" style="width:100%;border: 0px solid !important; border-collapse: collapse;">';
            sGridHTML +='<colgroup>';
            sGridHTML +='<col width="25%"/>';
            sGridHTML +='<col width="25%"/>';
            sGridHTML +='<col width="25%"/>';
            sGridHTML +='<col width="25%"/>';
            sGridHTML +='<col />';
            sGridHTML +='</colgroup>';
              
            sGridHTML +='<tbody>';
            sGridHTML +='<tr class="headerRow">';
            sGridHTML +='<td class="hdr" style="border-left: 0px;">Credit Card Number</td>';
            sGridHTML +='<td class="hdr">Payment Type</td>';
            sGridHTML +='<td class="hdr">Expiration Date Year</td>';
            sGridHTML +='<td class="hdr">Expiration Date Month</td>';
            sGridHTML +='</tr>';
            //sGridHTML +='</tbody>';
            //sGridHTML +='</table>';
            
            return sGridHTML;
        }
        
        function fncDataTableHtml()
        {
            var sGridHTML='';
            
            sGridHTML +='<table>';                
            sGridHTML +='<colgroup>';
            sGridHTML +='<col width="25%"/>';
            sGridHTML +='<col width="20%"/>';
            sGridHTML +='<col />';
            sGridHTML +='</colgroup>';
            sGridHTML +='<tbody>';
            
            return sGridHTML;
        }
       
       function LoadCCNumber(cc4DigitNo,creditCardno)
       {         
           var getcc4digitno=cc4DigitNo;// j$('#lnkView').val(); 
           var getccno=creditCardno;       
           j$('#CreditCards').val(getcc4digitno);
           j$('#CreditCardENo').val(getccno);
          
           j$("#dialog-creditcard").dialog( "close" );
       }
       
       function fncToogleSections(ERPName,ERPCompCode,pSynchronization)
       {
          gERPSystemName = ERPName;
          gERPCompanyCode = ERPCompCode;
          Synchronization =pSynchronization;         
          j$("#SageX3Header").show();                                              
       }
       
       //Show Apex Message
        function fncDisplayMessage(Type,Message)
        {
            j$('#imgError').hide();
            j$('#imgWarning').hide();
            j$('#imgConfirm').hide(); 
            j$('#imgInfo').hide();
        
            switch(Type)
            {
                case "Error":
                    j$('#imgError').show();
                    break;
                case "Warning":
                    j$('#imgWarning').show();
                    break;
                case "Confirm":
                    j$('#imgConfirm').show();
                    break;
                case "Info":
                    j$('#imgInfo').show();
                    break;
            }
        
            j$('#msgHeader').show();
            j$('#messages').html(Message);
        
            j$('#msgHeader').fadeIn();
            j$('#msgHeader').fadeOut(4000,"linear"); 
        }
        
        //Show Apex Message
        function fncDisplayDialogMessage(Type,Message)
        {
            j$('#imgDialogError').hide();
            j$('#imgDialogWarning').hide();
            j$('#imgDialogConfirm').hide(); 
            j$('#imgDialogInfo').hide();
        
            switch(Type)
            {
                case "Error":
                    j$('#imgDialogError').show();
                    break;
                case "Warning":
                    j$('#imgDialogWarning').show();
                    break;
                case "Confirm":
                    j$('#imgDialogConfirm').show();
                    break;
                case "Info":
                    j$('#imgDialogInfo').show();
                    break;
            }
        
            j$('#DialogMsgHeader').show();
            j$('#dialogmessages').html(Message);
        
            j$('#DialogMsgHeader').fadeIn();
            j$('#DialogMsgHeader').fadeOut(4000,"linear"); 
        }
        
        //Show Apex Message
        function fncDisplayMultiProdMessage(Type,Message)
        {
            j$('#imgMultiProdError').hide();
            j$('#imgMultiProdWarning').hide();
            j$('#imgMultiProdConfirm').hide(); 
            j$('#imgMultiProdInfo').hide();
        
            switch(Type)
            {
                case "Error":
                    j$('#imgMultiProdError').show();
                    break;
                case "Warning":
                    j$('#imgMultiProdWarning').show();
                    break;
                case "Confirm":
                    j$('#imgMultiProdConfirm').show();
                    break;
                case "Info":
                    j$('#imgMultiProdInfo').show();
                    break;
            }
        
            j$('#multiProductHeader').show();
            j$('#MultiProdMessage').html(Message);
        
            j$('#multiProductHeader').fadeIn();
            j$('#multiProductHeader').fadeOut(4000,"linear"); 
        }
        
        function fncCalcTax()
        {
            var LineTotal = isNaN(parseFloat(j$('#LineTotal').html())) ? 0.00 : parseFloat(j$('#LineTotal').html());
            if(LineTotal > 0)
            {
                showLoading();                
                ReCalcTax(j$("[id$='IntegrationId']").val(),j$('#CustomerNo').val(),j$('#TaxSchedule').val(),j$('#DiscountPct').val())
            }
            else
            {
                j$('#DiscountPct').val('0.00');
            }
        }
        
        //Open Ship To Lookup
        function OpenShipToLookUp()
        {
            if(gERPSystemName == 'Sage100ERP')
            {
                if(document.getElementById('Account_lkid').value !='')
                {
                    openLookup('ShipTo','frmPromote','{!JSENCODE(ShipToObjectPrefix)}','GUMU_Lite__Ship_To_Code__c','GUMU_Lite__Ship_To_Name__c','GUMU_Lite__ERP_Contact_Code__c','GUMU_Lite__Ship_To_City__c','','GUMU_Lite__Account_Id__c',document.getElementById('Account_lkid').value,'equal','','','');
                }else{
                    fncShowMessage('Please select the Account first.','Ship Code');
                }
            }
            else
            {
                if(document.getElementById('Account_lkid').value !='')
                {
                    openLookup('ShipTo','frmPromote','{!JSENCODE(ShipToObjectPrefix)}','GUMU_Lite__Ship_To_Code__c','GUMU_Lite__Ship_To_Name__c','GUMU_Lite__ERP_Contact_Code__c','GUMU_Lite__Ship_To_City__c','','GUMU_Lite__Account_Id__c',document.getElementById('Account_lkid').value,'equal','GUMU_Lite__IsShipTo__c','Yes','equal');
                }else{
                    fncShowMessage('Please select the Account first.','Ship Code');
                }
            }
        }
    </script>
    
    <apex:pageBlock >
    <apex:sectionHeader title="New Sales Order" rendered="{!isNew}"/> 
    <apex:sectionHeader title="Order {!ERPOrder.OrderNumber}" rendered="{!Not(isNew)}"/>
    <apex:outputLink value="/apex/ERPOrderList" style="font-size:11px;text-decoration:none;font-family:Verdana,Arial,serif;color:#015ba7;">&nbsp;&nbsp;&nbsp;&#60;&#60; Back to ERP Order List</apex:outputLink>
    <br/>
    <br/>
    
    <apex:form id="frmPromote">
        <div class="message infoM3" role="alert" id="msgHeader" style="display:none">
        <table border="0" cellpadding="0" cellspacing="0" class="messageTable" style="padding:0px;margin:0px;">
            <tbody>
                <tr valign="top">
                    <td>
                        <div id="imgError" style="display:none"><img alt="error" class="msgIcon" src="/s.gif" title="error" style="background-image:url(/img/msg_icons/error24.png);" /></div>
                        <div id="imgWarning" style="display:none"><img alt="warning" class="msgIcon" src="/s.gif" title="warning" style="background-image:url(/img/msg_icons/warning24.png);" /></div>
                        <div id="imgConfirm" style="display:none"><img alt="confirm" class="msgIcon" src="/s.gif" title="confirm" style="background-image:url(/img/msg_icons/confirm24.png);" /></div>
                        <div id="imgInfo" style="display:none"><img alt="info" class="msgIcon" src="/s.gif" title="info" style="background-image:url(/img/msg_icons/info24.png);" /></div>
                    </td>
                    <td class="messageCell"><div id="messages" class="messageText"><span id="idspan"><h4></h4></span>Please select the Integration first.<br/></div></td>
                </tr>
                <tr><td></td><td></td></tr>
            </tbody>
        </table>
    </div>
        
        
        <apex:actionFunction name="SaveOrder" immediate="true" action="{!SaveERPOrder}" oncomplete="fncSaveSuccess()" reRender="none" >
            <apex:param name="JSONOrderDetails" value="" assignto="{!JSONOrderDetails}" />
        </apex:actionFunction>
        
      <apex:actionFunction action="{!PromoteOrder}" name="PromoteOrder" immediate="true" reRender="IdLog" oncomplete="fncUpdateOrderNo('{!JSENCODE(OrderNumber)}')" >
            <apex:param value="" name="IntegrationKey"  assignto="{!IntegrationKey}"/>
            <apex:param value="" name="OrderHeaderFields" assignto="{!OrderHeaderDetails}"/>
            <apex:param value="" name="OrderDetailFields" assignto="{!JSONOrderDetails}"/>
            <apex:param value="" name="DocumentType"  assignto="{!DocumentType}"/>
      </apex:actionFunction>
            
        <apex:actionFunction name="UpdateOrderNumber" action="{!UpdateOrderNumber}" immediate="true" oncomplete="hideLoading();fncOrderSuccess()" reRender="none" >
            <apex:param name="ERPOrderNumber" value="" />
            <!--<apex:param name="OrderId" value="" assignto="{!OrderId}" />-->
        </apex:actionFunction>
        
        <apex:actionFunction name="fncERPName" action="{!GetERPName}" reRender="none" immediate="true" oncomplete="fncToogleSections('{!JSENCODE(ERPSystemName)}','{!JSENCODE(ERPCompanyCode)}','{!JSENCODE(Synchronization)}');" >
             <apex:param assignTo="{!AccountId}" name="AccountId" id="AccountId" value=""/>
        </apex:actionFunction>
        
        <apex:actionFunction name="ReadRealTimeProductData" action="{!ReadRealTimeProductData}" reRender="IdLog,IdReadRealTimeProductData" Id="IdReadRealTimeProductData" immediate="true" oncomplete="hideLoading();AfterReadRealTimeProductData('{!RetJSONPrdDetails}');" >
             <apex:param assignTo="{!JSONPrdDetails}" name="JSONPrdDetails" id="JSONPrdDetails" value=""/>
        </apex:actionFunction>
        
        <apex:pageBlock >
            <apex:pageBlockButtons location="both">
                <input type="button" id="btnSave" value=" Save " class="btn promote" />

                <input type="button" id="btnPromote" value=" Save & Promote " class="btn promote"/>
                <input type="button" id="btnCancel" value=" Cancel " class="btn"/>

            </apex:pageBlockButtons>
            <div class="pbSubheader brandTertiaryBgr first tertiaryPalette">
                <span class="pbSubExtra">
                <span class="requiredLegend">
                <span class="requiredExampleOuter">
                <span class="requiredExample">&nbsp;</span>
                </span>
                <span class="requiredText"> = Required Information</span>
                </span>
                </span>
                <h3>Order Information</h3>
            </div>
            <table width="100%" cellpadding="0" cellspacing="0">
                <colgroup>
                    <col width="13%"/>
                    <col width="20%"/>
                    <col width="13%"/>
                    <col width="20%"/>
                    <col width="13%"/>
                    <col width="20%"/>
                </colgroup>
                <tr>
                    <td class="labelCol vfLabelColTextWrap  first">
                        <apex:outputLabel value="Account Name"/>
                    </td>
                    <td class="dataCol  first ">
                        <div class="requiredInput">
                            <div class="requiredBlock"></div>
                            <span>
                            <input  type="hidden" name="Account_lkid" id="Account_lkid" value="{!Order.AccountId}" onchange="fncPopulateAccountData();"/>
                            <input  type="hidden" name="Account_lkold" id="Account_lkold" value="null"/>
                            <input  type="hidden" name="Account_lktp" id="Account_lktp" value="{!AccountObjectPrefix}"/>
                            <input  type="hidden" name="Account_lspf" id="Account_lspf" value="0"/>
                            <input  type="hidden" name="Account_lspfsub" id="Account_lspfsub" value="0"/>
                            <input  type="hidden" name="Account_mod" id="Account_mod" value="0"/>
                            <input class="HtmlInput" readonly="readonly" type="text" name="Account" id="Account" value="{!Order.AccountName__c}" maxlength="255"  onchange="getElementByIdCS('Account_mod').value='1';fncERPName(getElementByIdCS('Account_lkid').value);fncPopulateAccountData();"/>
                            <a href="javascript:void(0)" onclick="javascript:openLookup('Account','frmPromote','{!JSENCODE(AccountObjectPrefix)}','Name','GUMU_Lite__ERP_Customer_Number__c','GUMU_Lite__ERP_Company_Code__c','','','GUMU_Lite__Integration_Key__c','{!JSENCODE(IntegrationKey)}','equal','','','','','','');" 
                                id="Account_lkwgt" tabindex="2" title="Parent Account Lookup (New Window)">
                            <img src="/s.gif" alt="Select Account(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select Account(New Window)"/>
                            </a>                            
                            </span>
                            <input type="hidden" id="CustomerNo" value="{!Order.CustomerNo__c}"/>
                             <input type="hidden" id="ARDivision"/>
                        </div>                        
                    </td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Status"/></td>
                    <td class="dataCol  first "><apex:outputLabel value="Draft" id="Status"/></td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Ship To"/></td>
                    <td class="dataCol  first ">
                     <div class="requiredInput">
                        <div class="requiredBlock"></div>
                        <span>
                            <input type="hidden" name="ShipTo_lkid" id="ShipTo_lkid" value="" onchange="fncPopulateShipToData();" />
                            <input type="hidden" name="ShipTo_lkold" id="ShipTo_lkold" value="null"/>
                            <input type="hidden" name="ShipTo_lktp" id="ShipTo_lktp" value="{!ShipToObjectPrefix}"/>
                            <input type="hidden" name="ShipTo_lspf" id="ShipTo_lspf" value="0"/>
                            <input type="hidden" name="ShipTo_lspfsub" id="ShipTo_lspfsub" value="0"/>
                            <input type="hidden" name="ShipTo_mod" id="ShipTo_mod" value="0"/>
                            <input class="HtmlInput" readonly="readonly" type="text" name="ShipTo" id="ShipTo" value="{!Order.ShipToCode__c}" maxlength="255" onchange="getElementByIdCS('ShipTo_mod').value='1';fncPopulateShipToData();"/>
                            <!--<a href="javascript:void(0)" onclick="javascript:if(getElementById('Account_lkid').value !=''){openLookup('ShipTo','frmPromote','{!JSENCODE(ShipToObjectPrefix)}','Ship_To_Code__c','Ship_To_Name__c','ERP_Contact_Code__c','Ship_To_City__c','','Account_Id__c',getElementById('Account_lkid').value,'equal','','','');}else{fncShowMessage('Please select the Account first.','Ship Code');}" id="ShipTo_lkwgt" tabindex="2" title="Parent ShipTo Lookup (New Window)">-->
                            <a href="javascript:void(0)" onclick="javascript:OpenShipToLookUp()" id="ShipTo_lkwgt" tabindex="2" title="Parent ShipTo Lookup (New Window)">
                                <img src="/s.gif" alt="Select ShipTo(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select ShipTo(New Window)"/>
                            </a>                            
                        </span>
                       </div> 
                    </td>
                </tr>
                <tr>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Description"/></td>
                    <td class="dataCol  first "><apex:inputTextarea cols="25" rows="2" id="OrderDescription" value="{!Order.Description}" disabled="{!TextHidden}"/></td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Billing Street"/></td>
                    <td class="dataCol  first "><apex:inputTextarea cols="25" id="bStreet" rows="2" value="{!Order.BillingStreet}" disabled="{!TextHidden}" /></td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Shipping Street"/></td>
                    <td class="dataCol  first "><apex:inputTextarea id="sStreet" cols="25" rows="2" value="{!Order.ShippingStreet}" disabled="{!TextHidden}"/></td>
                </tr>
                <tr>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Customer Authorized By"/></td>
                    <td class="dataCol  first ">
                        <span>
                            <input type="hidden" name="Contact_lkid" id="Contact_lkid" value=""/>
                            <input type="hidden" name="Contact_lkold" id="Contact_lkold" value="null"/>
                            <input type="hidden" name="Contact_lktp" id="Contact_lktp" value="{!ContactObjectPrefix}"/>
                            <input type="hidden" name="Contact_lspf" id="Contact_lspf" value="0"/>
                            <input type="hidden" name="Contact_lspfsub" id="Contact_lspfsub" value="0"/>
                            <input type="hidden" name="Contact_mod" id="Contact_mod" value="0"/>
                            <input class="HtmlInput" readonly="readonly" type="text" name="Contact" id="Contact" maxlength="255" onchange="getElementByIdCS('Contact_mod').value='1';fncPopulateContactData();"/>
                            <a href="javascript:void(0)" onclick="javascript:if(getElementById('Account_lkid').value !=''){openLookup('Contact','frmPromote','{!JSENCODE(ContactObjectPrefix)}','Name','GUMU_Lite__ERP_Contact_Code__c','GUMU_Lite__Parent_Customer__c','','','AccountId',getElementById('Account_lkid').value,'equal','','','');}else{fncShowMessage('Please select the Account first.','Select contact');}" id="Contact_lkwgt" tabindex="2" title="Parent Contact Lookup (New Window)">
                                <img src="/s.gif" alt="Select Contact(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select Contact(New Window)"/>
                            </a>                            
                        </span>
                    </td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Billing City"/></td>
                    <td class="dataCol  first "><apex:inputText id="bCity" value="{!Order.BillingCity}" disabled="{!TextHidden}"/></td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Shipping City"/></td>
                    <td class="dataCol  first "><apex:inputText id="sCity" value="{!Order.ShippingCity}" disabled="{!TextHidden}"/></td>
                </tr>
                <tr>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Company Authorized By"/></td>
                    <td class="dataCol  first ">
                        <span>
                            <input type="hidden" name="User_lkid" id="User_lkid" value=""/>
                            <input type="hidden" name="User_lkold" id="User_lkold" value="null"/>
                            <input type="hidden" name="User_lktp" id="User_lktp" value="{!UserObjectPrefix}"/>
                            <input type="hidden" name="User_lspf" id="User_lspf" value="0"/>
                            <input type="hidden" name="User_lspfsub" id="User_lspfsub" value="0"/>
                            <input type="hidden" name="User_mod" id="User_mod" value="0"/>
                            <input class="HtmlInput" readonly="readonly" type="text" name="User" id="User" value="{!Order.UserName__c}"  maxlength="255" onchange="getElementByIdCS('User_mod').value='1';fncPopulateUserData();"/>
                            <a href="javascript:void(0)" onclick="javascript:openLookup('User','frmPromote','{!JSENCODE(UserObjectPrefix)}','Name','Username','','','','','','','','','');" id="User_lkwgt" tabindex="2" title="Parent User Lookup (New Window)">
                                <img src="/s.gif" alt="Select User(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select User(New Window)"/>
                            </a>                            
                        </span>
                    </td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Billing State/Province"/></td>
                    <td class="dataCol  first "><apex:inputText id="bState" value="{!Order.BillingState}" disabled="{!TextHidden}" /></td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Shipping State/Province"/></td>
                    <td class="dataCol  first "><apex:inputText id="sState" value="{!Order.ShippingState}" disabled="{!TextHidden}" /></td>
                </tr>
                <tr>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Order Type"/></td>
                    <td class="dataCol  first "><apex:inputField id="orderType" value="{!Order.Type}" /></td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Billing Zip/Postal Code"/></td>
                    <td class="dataCol  first "><apex:inputText id="bZip" value="{!Order.BillingPostalCode}" disabled="{!TextHidden}"/></td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Shipping Zip/Postal Code"/></td>
                    <td class="dataCol  first "><apex:inputText id="sZip" value="{!Order.ShippingPostalCode}" disabled="{!TextHidden}" /></td>
                </tr>
                <tr>
                     <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Order Start Date"/></td>
                    <td class="dataCol  first ">
                        <div class="requiredInput">
                            <div class="requiredBlock"></div>
                            <apex:inputField id="OrderDate" value="{!Order.EffectiveDate}" />
                            
                        </div>
                    </td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Billing Country"/></td>
                    <td class="dataCol  first "><apex:inputText id="bCountry" value="{!Order.BillingCountry}" disabled="{!TextHidden}"/></td>
                    <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Shipping Country"/></td>
                    <td class="dataCol  first "><apex:inputText id="sCountry" value="{!Order.ShippingCountry}" disabled="{!TextHidden}"/></td>
                </tr>
                
            </table>
           <br/>
            <div class="pbSubheader brandTertiaryBgr first tertiaryPalette">
                <span class="pbSubExtra">
                    <span class="requiredLegend">
                        <span class="requiredExampleOuter">
                            <span class="requiredExample">&nbsp;</span>
                        </span>
                        <span class="requiredText"> = Required Information</span>
                    </span>
                </span>
                <h3>ERP Information</h3>
            </div>
            <!--///////////////////////////////////-->
            <!-- Sage X3 Header -->
            <div id="SageX3Header">
                <table width="100%" cellpadding="0" cellspacing="0">
                    <colgroup>
                        <col width="13%"/>
                        <col width="20%"/>
                        <col width="13%"/>
                        <col width="20%"/>
                        <col width="13%"/>
                        <col width="20%"/>
                    </colgroup>
                    <tr>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="ERP Integration"/></td>
                        <td class="dataCol  first ">
                            <input type="hidden" id="IntegrationId" value="{!Order.Integration_Key__c}"/> 
                            <apex:outputText id="Integration" value="{!Order.ERPIntegration__c}"/> 
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Price Book"/></td>
                        <td class="dataCol  first ">
                            <apex:outputLabel id="Pricebook" value="{!Order.PricebookName__c}" />
                            <input type="hidden" id="PricebookId"/>
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Document Type"/></td>
                        <td class="dataCol  first ">
                            <apex:selectList size="1" multiselect="false" id="DocumentType" onmouseup="SetPreviousValue(this.value);"  onchange="fncToggleFieldsOnDocumentType(this.value);">
                                <apex:selectOption itemLabel="Order" itemValue="Order" />
                                <!--<apex:selectOption itemLabel="Quote" itemValue="Quote"/>-->
                            </apex:selectList>
                        </td>
                    </tr>
                    <tr>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Sales Site"/></td>
                        <td class="dataCol  first ">
                            <div class="requiredInput">
                                <div class="requiredBlock" id="requiredBlockSalesSite"></div>
                                <span>
                                    <input type="hidden" name="SalesSite_lkid" id="SalesSite_lkid" value="{!Order.SalesSiteId__c}"/>
                                    <input type="hidden" name="SalesSite_lkold" id="SalesSite_lkold" value="null"/>
                                    <input type="hidden" name="SalesSite_lktp" id="SalesSite_lktp" value="{!SalesSiteObjectPrefix}"/>
                                    <input type="hidden" name="SalesSite_lspf" id="SalesSite_lspf" value="0"/>
                                    <input type="hidden" name="SalesSite_lspfsub" id="SalesSite_lspfsub" value="0"/>
                                    <input type="hidden" name="SalesSite_mod" id="SalesSite_mod" value="0"/>
                                    <input class="HtmlInput" readonly="readonly" type="text" name="SalesSite" id="SalesSite" value="{!Order.SalesSite__c}" maxlength="255"  onchange="getElementByIdCS('SalesSite_lkid').value='';getElementByIdCS('SalesSite_mod').value='1';"/>
                                    <a href="javascript:void(0)" onclick="javascript:if(getElementById('IntegrationId').value !=''){openLookup('SalesSite','frmPromote','{!JSENCODE(SalesSiteObjectPrefix)}','GUMU_Lite__Site_Code__c','GUMU_Lite__Site_Description__c','','','','GUMU_Lite__Integration_Key__c',getElementById('IntegrationId').value,'equal','','','');}else{fncShowMessage('Please select the Account first.','Sales Site');}"
                                    id="SalesSite_lkwgt" tabindex="2" title="Parent Account Lookup (New Window)">
                                        <img src="/s.gif" alt="Select Integration(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select Integration(New Window)"/>
                                    </a>
                                </span>
                            </div>
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Shipment Site"/></td>
                        <td class="dataCol  first ">
                            <div class="requiredInput">
                                <div class="requiredBlock" id="requiredBlockShipmentSite"></div>
                                <span>
                                    <input type="hidden" name="ShipmentSite_lkid" id="ShipmentSite_lkid" value="{!Order.ShipmentSiteId__c}"/>
                                    <input type="hidden" name="ShipmentSite_lkold" id="ShipmentSite_lkold" value="null"/>
                                    <input type="hidden" name="ShipmentSite_lktp" id="ShipmentSite_lktp" value="{!ShipSiteObjectPrefix}"/>
                                    <input type="hidden" name="ShipmentSite_lspf" id="ShipmentSite_lspf" value="0"/>
                                    <input type="hidden" name="ShipmentSite_lspfsub" id="ShipmentSite_lspfsub" value="0"/>
                                    <input type="hidden" name="ShipmentSite_mod" id="ShipmentSite_mod" value="0"/>
                                    <input class="HtmlInput" readonly="readonly" type="text" name="ShipmentSite" id="ShipmentSite" value="{!Order.ShipmentSite__c}" maxlength="255"  onchange="getElementByIdCS('ShipmentSite_lkid').value='';getElementByIdCS('ShipmentSite_mod').value='1';"/>
                                    <a href="javascript:void(0)" onclick="javascript:if(getElementById('IntegrationId').value !=''){openLookup('ShipmentSite','frmPromote','{!JSENCODE(ShipSiteObjectPrefix)}','GUMU_Lite__Site_Code__c','GUMU_Lite__Site_Description__c','','','','GUMU_Lite__Integration_Key__c',getElementById('IntegrationId').value,'equal','','','');}else{fncShowMessage('Please select the Account first.','Shipment Site');}"
                                    id="ShipmentSite_lkwgt" tabindex="2" title="Parent Account Lookup (New Window)">
                                        <img src="/s.gif" alt="Select Integration(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select Integration(New Window)"/>
                                    </a>
                                </span>
                            </div>
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Currency"/></td>                   
                         <td class="dataCol  first ">
                             <div class="requiredInput">
                             <div class="requiredBlock" id="requiredBlockShipmentSite"></div>
                            <span>
                                <input type="hidden" name="Currency_lkid" id="Currency_lkid" value=""/>
                                <input type="hidden" name="Currency_lkold" id="Currency_lkold" value="null"/>
                                <input type="hidden" name="Currency_lktp" id="Currency_lktp" value="{!CurrencyObjectPrefix}"/>
                                <input type="hidden" name="Currency_lspf" id="Currency_lspf" value="0"/>
                                <input type="hidden" name="Currency_lspfsub" id="Currency_lspfsub" value="0"/>
                                <input type="hidden" name="Currency_mod" id="Currency_mod" value="0"/>
                                <input class="HtmlInput" readonly="readonly" type="text" name="Currency" id="Currency" value="{!Order.Currency__c}" maxlength="255" onchange="getElementByIdCS('Currency_mod').value='1';fncPopulateUserData();"/>
                                <a href="javascript:void(0)" onclick="javascript:openLookup('Currency','frmPromote','{!JSENCODE(CurrencyObjectPrefix)}','GUMU_Lite__Currency_Code__c','GUMU_Lite__Currency_Description__c','','','','','','','','','');" id="Currency_lkwgt" tabindex="2" title="Parent User Lookup (New Window)">
                                    <img src="/s.gif" alt="Select User(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select User(New Window)"/>
                                </a>                            
                            </span>
                            </div>
                        </td>
                    </tr>
                  
                </table>
            </div>

            <!--    Line Item Grid      -->
            <div class="bPageBlock brandSecondaryBrd secondaryPalette" id="HeaderOrdTtl" style="margin: 10px 0px 0px 0px;">
                <div class="pbHeader">
                    <table border="0" cellpadding="0" cellspacing="0">
                        <tbody>
                            <tr>
                                <td class="pbTitle">
                                    <img src="/s.gif" alt="" class="minWidth" title="" style="margin-right: 0.25em;margin-right: 0.25em;" height="1" width="12"/>
                                    <img src="/s.gif" alt="" class="relatedListIcon" title=""/>
                                    <h3 id="80190000000iC8p_RelatedOrderItemList_title">Order Total</h3>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="pbBody" id="80190000000iC8p_RelatedOrderItemList_body" style="margin : 0px !important">
                    <table width="100%" cellpadding="0" cellspacing="0">
                        <colgroup>
                            <col width="13%"/>
                            <col width="20%"/>
                            <col width="13%"/>
                            <col width="20%"/>
                            <col width="13%"/>
                            <col width="20%"/>
                        </colgroup>                        
                        <tr id="trOrderTotalX3">
                            <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Amount - Tax"/></td>
                             <td>$ <label id="hdrsubTax">{!Order.AmtSubTax__c}</label></td>
                            <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Amount + Tax"/></td>
                            <td>$ <label id="hdrAddTax">{!Order.AmtAddTax__c}</label></td>
                            <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Order Total"/></td>
                            <td class="dataCol  first ">$ <label id="OrderTotal_X3" style="font-weight:bold">{!Order.ERP_Order_Total__c}</label></td>
                        </tr>
                        
                    </table>
                </div>
            </div>
            
            <div class="bPageBlock brandSecondaryBrd secondaryPalette" style="margin-top:10px;">
                <div class="pbHeader">
                    <table border="0" cellpadding="0" cellspacing="0">
                        <tbody>
                            <tr>
                                <td class="pbTitle">
                                    <img src="/s.gif" alt="" class="minWidth" title="" style="margin-right: 0.25em;margin-right: 0.25em;" height="1" width="12"/>
                                    <img src="/s.gif" alt="" class="relatedListIcon" title=""/>
                                    <h3>Order Products</h3>
                                </td>
                                <td class="pbButton" style="float:right">
                                    <input value=" Add Product " class="btn" name="addProd" onclick="fncShowProductLookup('add','');" title="Add Product" type="button"/>                                    
                                    <input value=" Add Multiple Product(s) " class="btn" name="addProd"  onclick="fncShowMultipleItmLkp();" title="Add Multiple Product" type="button"/>                                    
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <div style="display:none">
                    <input type="text" id="DialogMode"/>
                    <input type="text" id="ItemIndex" />
                </div>
                
                <apex:actionFunction name="RefrshDetails" reRender="LineItems,LineTotal,SalesTaxAmt,OrderTotal,OrderTotal_X3" immediate="true" oncomplete="fncCalculateTotal();hideLoading();" action="{!CRUDLineItem}">
                    <apex:param name="mapLineDetails" value="" />
                    <apex:param name="LineIndex" value="" />
                    <apex:param name="LineOperation" value="" />
                    <apex:param name="IntegrationKey" value="" />
                    <apex:param name="UniqueKey" value="" />
                    <apex:param name="TaxSchedule" value="" />
                </apex:actionFunction>
                
                <apex:actionFunction name="ReCalcTax" reRender="SalesTaxAmt,OrderTotal,OrderTotal_X3" immediate="true" oncomplete="fncCalculateTotal();hideLoading();" action="{!RecalculateTax}">
                    <apex:param name="IntegrationKey" value="" />
                    <apex:param name="UniqueKey" value="" />
                    <apex:param name="TaxSchedule" value="" />
                    <apex:param name="DiscountPC" value="" />
                </apex:actionFunction>

                <apex:outputPanel id="LineItems"  >
                    <apex:variable var="cnt" value="{!0}" />
                    <table style="width:100%;border-bottom: 0px!important;" class="list" border="1" cellspacing="0" cellpadding="5">
                        <tr class="headerRow">
                            <th class="actionColumn" scope="col">Action</th>
                            <th scope="col" class=" zen-deemphasize">Product Code</th>
                            <th scope="col" class=" zen-deemphasize">Product Description</th>
                            <th scope="col" class=" zen-deemphasize">UOM</th>
                            <th scope="col" class="CurrencyElement zen-deemphasize">List Price ($)</th>
                            <th scope="col" class="CurrencyElement zen-deemphasize">Quoted Price ($)</th>
                            <th scope="col" class="numericalColumn zen-deemphasize">Quantity</th>
                            <th scope="col" class="numericalColumn zen-deemphasize">Discount (%)</th>                          
                            <th id="lineAmtsubTax" scope="col" class="numericalColumn zen-deemphasize" >Amt-Tax</th>
                            <th id="lineAmtaddTax" scope="col" class="CurrencyElement zen-deemphasize" >Amt+Tax</th>
                            <th scope="col" class="CurrencyElement zen-deemphasize">Quoted Price Sum ($)</th>
                        </tr>
                        
                        <apex:repeat value="{!LineItems}" var="item" >
                            <tr class="dataRow">
                                <td class="actionColumn">
                                    <a href="javascript:void(0);" class="actionLink" onclick="fncShowProductLookup('edit',{!cnt});" title="Edit">Edit</a>&nbsp;|&nbsp;
                                    <a href="javascript:void(0);" class="actionLink" onclick="fncShowProductLookup('delete',{!cnt});" title="Delete">Del</a>
                                </td>
                                <th scope="row" class="dataCell"> {!item['ItemCode']}</th>
                                <td class=" dataCell"> {!item['ItemDescription']} </td>
                                <td class=" dataCell"> {!item['UOM']} </td>
                                <td class=" dataCell  CurrencyElement"> {!item['ListPrice']} </td>
                                <td class=" dataCell  CurrencyElement"> {!item['UnitPrice']} </td>
                                <td class=" dataCell  numericalColumn"> {!item['QuantityOrdered']} </td>
                                <td class=" dataCell  numericalColumn"> {!item['Discount']} </td>
                                <td id="tdlineAmtsubTax_{!cnt}" class=" dataCell  numericalColumn" > {!item['minusTax']} </td>
                                <td id="tdlineAmtaddTax_{!cnt}" class=" dataCell  CurrencyElement" > {!item['plusTax']} </td>                              
                                <td class=" dataCell  CurrencyElement"> {!item['ExtensionAmt']} </td> 
                            </tr>
                            <apex:variable var="cnt" value="{!cnt+1}"/>                            
                        </apex:repeat>
                        
                        <tr class="dataRow">
                            <td class="actionColumn"></td>
                            <th scope="row" class="dataCell"> </th>
                            <td class=" dataCell"> </td>
                            <td class=" dataCell"> </td>
                            <td class=" dataCell  numericalColumn"></td>
                            <td class=" dataCell  numericalColumn"></td>
                            <td class=" dataCell  CurrencyElement"></td>
                            <td class=" dataCell  CurrencyElement"></td>
                            <td class=" dataCell  CurrencyElement" id="lineAmtsubTotal"> </td>                            
                            <td class=" dataCell  CurrencyElement" id="lineAmtaddTotal"></td>                           
                            <td class=" dataCell  CurrencyElement" style="font-weight:bold">
                                <label class="labelCol">Total $ </label>
                                <label id="LineTotal" >{!LineTotal}</label>
                                <input type="hidden" id="linesubtaxTotal" value="{!minusTaxTotal}"></input>
                                <input type="hidden" id="lineaddtaxTotal" value="{!plusTaxTotal}" ></input>
                            </td>
                        </tr>
                    </table>
                     <script>  
                            j$('#lineAmtsubTax').show();
                            j$('#lineAmtaddTax').show();
                            j$('#tdlineAmtsubTax_{!cnt}').show();
                            j$('#tdlineAmtaddTax_{!cnt}').show();
                            j$('#lineAmtsubTotal').show();
                            j$('#lineAmtaddTotal').show();
                           
                        </script>
                    <input type="hidden" id="LineCount" value="{!cnt}" />
                    <input type="hidden" id="JSONOrderItems" value="{!JSONOrderItems}" />
                   
                </apex:outputPanel>
                
            </div>
        </apex:pageBlock>
        
        <!--    Dialog Box      -->
        
        <div id="dialogSingleProduct" title="Add Product" style="display:none">
            
            <div class="message infoM3" role="alert" id="DialogMsgHeader" style="display:none">
                <table border="0" cellpadding="0" cellspacing="0" class="messageTable" style="padding:0px;margin:0px;">
                    <tbody>
                        <tr valign="top">
                            <td>
                                <div id="imgDialogError" style="display:none"><img alt="error" class="msgIcon" src="/s.gif" title="error" style="background-image:url(/img/msg_icons/error24.png);" /></div>
                                <div id="imgDialogWarning" style="display:none"><img alt="warning" class="msgIcon" src="/s.gif" title="warning" style="background-image:url(/img/msg_icons/warning24.png);" /></div>
                                <div id="imgDialogConfirm" style="display:none"><img alt="confirm" class="msgIcon" src="/s.gif" title="confirm" style="background-image:url(/img/msg_icons/confirm24.png);" /></div>
                                <div id="imgDialogInfo" style="display:none"><img alt="info" class="msgIcon" src="/s.gif" title="info" style="background-image:url(/img/msg_icons/info24.png);" /></div>
                            </td>
                            <td class="messageCell"><div id="dialogmessages" class="messageText"><span id="idspan"><h4></h4></span>Please select the Integration first.<br/></div></td>
                        </tr>
                        <tr><td></td><td></td></tr>
                    </tbody>
                </table>
        </div>
            
            <apex:actionFunction action="{!LoadItem}" name="LoadItem" reRender="ItemDetails" immediate="true" oncomplete="fncProductFamilyChange(false);">
                <apex:param value="" name="Index"/>
            </apex:actionFunction>
            <apex:pageBlock id="ItemDetails" >
                <div style="float:right; margin-bottom:5px">
                    <span class="pbSubExtra">
                        <span class="requiredLegend">
                            <span class="requiredExampleOuter">
                                <span class="requiredExample">&nbsp;</span>
                            </span>
                            <span class="requiredText"> = Required Information</span>
                        </span>
                    </span>
                </div>
                
                <table width="100%" cellpadding="0" cellspacing="0">
                    <colgroup>
                        <col width="13%"/>
                        <col width="20%"/>
                        <col width="13%"/>
                        <col width="20%"/>
                        <col width="13%"/>
                        <col width="20%"/>
                    </colgroup>
                    <tr>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Product Family"/></td>
                        <td class="dataCol  first ">
                            <span>
                                <input type="hidden" name="ProductFamily_lkid" id="ProductFamily_lkid" value="000000000000000"/>
                                <input type="hidden" name="ProductFamily_lkold" id="ProductFamily_lkold" value="null"/>
                                <input type="hidden" name="ProductFamily_lktp" id="ProductFamily_lktp" value="{!ProductFamilyObjectPrefix}"/>
                                <input type="hidden" name="ProductFamily_lspf" id="ProductFamily_lspf" value="0"/>
                                <input type="hidden" name="ProductFamily_lspfsub" id="ProductFamily_lspfsub" value="0"/>
                                <input type="hidden" name="ProductFamily_mod" id="ProductFamily_mod" value="0"/>
                                <input readonly="readonly" type="text" value="{!CurrentItem.ItemType}" name="ProductFamily" id="ProductFamily" maxlength="255"  onchange="getElementByIdCS('ProductFamily_lkid').value='';getElementByIdCS('ProductFamily_mod').value='1';fncProductFamilyChange(true);"/> <!-- fncClearProductData();  -->
                                <a href="javascript:void(0)" onclick="fncOpenLookup('ProductFamily');"
                                id="ProductFamily_lkwgt" tabindex="2" title="Warehouse Lookup (New Window)">
                                    <img src="/s.gif" alt="Select Integration(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select Integration(New Window)"/>
                                </a>
                            </span>
                        </td>                  
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Product Code"/></td>
                        <td class="dataCol  first ">
                            <div class="requiredInput">
                                <div class="requiredBlock"></div>
                                <span>
                                    <input type="hidden" name="Product_lkid" id="Product_lkid" value="{!CurrentItem.ProductId}"/>
                                    <input type="hidden" name="Product_lkold" id="Product_lkold" value="null"/>
                                    <input type="hidden" name="Product_lktp" id="Product_lktp" value="{!PBEntryOjectPrefix}"/>
                                    <input type="hidden" name="Product_lspf" id="Product_lspf" value="0"/>
                                    <input type="hidden" name="Product_lspfsub" id="Product_lspfsub" value="0"/>
                                    <input type="hidden" name="Product_mod" id="Product_mod" value="0"/>
                                    <input readonly="readonly" type="text" value="{!CurrentItem.ItemCode}" name="Product" id="Product" maxlength="255" onchange="getElementByIdCS('Product_mod').value='1';fncGetProductData();"/>
                                    <a href="javascript:void(0)" onclick="fncOpenLookup('Product');" id="Product_lkwgt" tabindex="2" title="Parent Product Lookup (New Window)" >
                                        <img src="/s.gif" alt="Select Product(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select Product(New Window)"/>
                                    </a>                            
                                </span>
                            </div>
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Description"/></td>
                        <td class="dataCol  first ">
                            <textarea rows="2" id="ProductDescription" readonly="readonly">{!CurrentItem.ItemDescription} </textarea>
                        </td>
                    </tr>
                    <tr>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Warehouse"/></td>
                        <td class="dataCol  first ">
                            <div id="opProductSite">                               
                              <input readonly="readonly" type="text" value="{!CurrentItem.WarehouseCode}" name="ProductSite" id="ProductSite" maxlength="255"/> 
                          </div>
                           <div id="opProductWarehouse">
                                <span>
                                    <input type="hidden" name="ProductWarehouse_lkid" id="ProductWarehouse_lkid" value="000000000000000"/>
                                    <input type="hidden" name="ProductWarehouse_lkold" id="ProductWarehouse_lkold" value="null"/>
                                    <input type="hidden" name="ProductWarehouse_lktp" id="ProductWarehouse_lktp" value="{!WarehouseObjectPrefix}"/>
                                    <input type="hidden" name="ProductWarehouse_lspf" id="ProductWarehouse_lspf" value="0"/>
                                    <input type="hidden" name="ProductWarehouse_lspfsub" id="ProductWarehouse_lspfsub" value="0"/>
                                    <input type="hidden" name="ProductWarehouse_mod" id="ProductWarehouse_mod" value="0"/>
                                    <input readonly="readonly" type="text" value="{!CurrentItem.WarehouseCode}" name="ProductWarehouse" id="ProductWarehouse" maxlength="255"  onchange="getElementByIdCS('ProductWarehouse_lkid').value='';getElementByIdCS('ProductWarehouse_mod').value='1';"/>
                                    <a href="javascript:void(0)" onclick="if(j$('#ProductFamily').val() == '3' || j$('#ProductFamily').val() == '4' || j$('#ProductFamily').val() == '5'){ return false;}else{openLookup('ProductWarehouse','frmPromote','{!JSENCODE(WarehouseObjectPrefix)}','Warehouse_Code__c','Warehouse_Description__c','','','','Integration_Key__c',getElementById('IntegrationId').value,'equal','','','');}"
                                    id="ProductWarehouse_lkwgt" tabindex="2" title="Warehouse Lookup (New Window)">
                                        <img src="/s.gif" alt="Select Integration(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select Integration(New Window)"/>
                                    </a>
                                </span>
                           </div>  
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="UOM" /></td>
                        <td class="dataCol  first ">
                            <span>
                                <input type="hidden" name="UOM_lkid" id="UOM_lkid" value=""/>
                                <input type="hidden" name="UOM_lkold" id="UOM_lkold" value="null"/>
                                <input type="hidden" name="UOM_lktp" id="UOM_lktp" value="{!UOMObjectPrefix}"/>
                                <input type="hidden" name="UOM_lspf" id="UOM_lspf" value="0"/>
                                <input type="hidden" name="UOM_lspfsub" id="UOM_lspfsub" value="0"/>
                                <input type="hidden" name="UOM_mod" id="UOM_mod" value="0"/>
                                <input readonly="readonly" type="text" value="{!CurrentItem.UOM}" name="UOM" id="UOM" maxlength="255" onchange="getElementByIdCS('UOM_mod').value='1';fncGetProductData();"/>
                                <a href="javascript:void(0)" onclick="if(j$('#ProductFamily').val() == '3' || j$('#ProductFamily').val() == '4' ){ return false;}else{openLookup('UOM','frmPromote','{!JSENCODE(UOMObjectPrefix)}','GUMU_Lite__UOM_Code__c','Name','','','','GUMU_Lite__Integration_Key__c',getElementById('IntegrationId').value,'equal','','','');}" id="UOM_lkwgt" tabindex="2" title="Parent UOM Lookup (New Window)">
                                    <img src="/s.gif" alt="Select UOM(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select UOM(New Window)"/>
                                </a>                            
                            </span>
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Tax Class" id="tdTaxClass"/><apex:outputLabel value="Tax Rule" id="tdTaxRule" style="display:none"/></td>
                        <td class="dataCol  first ">
                            <apex:outputLabel id="txClassLookup">
                                <span>
                                    <input type="hidden" name="TaxClass_lkid" id="TaxClass_lkid" value=""/>
                                    <input type="hidden" name="TaxClass_lkold" id="TaxClass_lkold" value="null"/>
                                    <input type="hidden" name="TaxClass_lktp" id="TaxClass_lktp" value="{!TaxClassObjectPrefix}"/>
                                    <input type="hidden" name="TaxClass_lspf" id="TaxClass_lspf" value="0"/>
                                    <input type="hidden" name="TaxClass_lspfsub" id="TaxClass_lspfsub" value="0"/>
                                    <input type="hidden" name="TaxClass_mod" id="TaxClass_mod" value="0"/>
                                    <input readonly="readonly" type="text" value="{!CurrentItem.TaxClass}" name="TaxClass" id="TaxClass" maxlength="255" onchange="getElementByIdCS('TaxClass_mod').value='1';"/>
                                    <a href="javascript:void(0)" onclick="if(j$('#ProductFamily').val() == '4' ){ return false;}else{openLookup('TaxClass','frmPromote','{!JSENCODE(TaxClassObjectPrefix)}','GUMU_Lite__Tax_Class_Code__c','GUMU_Lite__Tax_Class_Description__c','','','','GUMU_Lite__Integration_Key__c',getElementById('IntegrationId').value,'equal','','','');}" id="TaxClass_lkwgt" tabindex="2" title="Parent TaxClass Lookup (New Window)">
                                        <img src="/s.gif" alt="Select TaxClass(New Window)" class="lookupIcon" onblur="this.className = 'lookupIcon';" onfocus="this.className = 'lookupIconOn';" onmouseout="this.className = 'lookupIcon';this.className = 'lookupIcon';" onmouseover="this.className = 'lookupIconOn';this.className = 'lookupIconOn';" title="Select TaxClass(New Window)"/>
                                    </a>                            
                                </span>
                            </apex:outputLabel>
                             <apex:outputLabel id="txRuleLookup" style="display:none">                              
                                 <input type="text" value="{!CurrentItem.TaxClass}" name="TaxRule" id="TaxRule" maxlength="255" readonly="readonly"/>
                                 <input type="hidden" value="{!CurrentItem.TaxClass}" name="TaxRate" id="TaxRate" maxlength="255" readonly="readonly"/>         
                            </apex:outputLabel>
                        </td>
                    </tr>
                    <tr>
                        
                        <td class="labelCol vfLabelColTextWrap  first" id="tdQOHlbl"><apex:outputLabel value="Quantity On Hand"/></td>
                        <td class="dataCol  first " id="tdQOHval"><label id="QOH"> {!CurrentItem.QOH}</label></td>                       
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Quantity"/></td>
                        <td class="dataCol  first ">
                            <div class="requiredInput">
                                <div class="requiredBlock"></div>
                                <input type="text" id="Quantity" name="Quantity" style="text-align:right" value="{!CurrentItem.QuantityOrdered}" onkeypress="return NumbersOnly(event,this,false,0)" onchange="if(j$('#Product').val().trim() != ''){fncGetProductData();}"/>
                            </div>
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Discount (%)"/></td>
                        <td class="dataCol  first "><input type="text" id="Discount" style="text-align:right" value="{!CurrentItem.Discount}" onkeypress="return NumbersOnly(event,this,true,2)" onchange="fncGetProductData();" /></td> 
                    </tr>
                    <tr>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="List Price"/></td>
                        <td class="dataCol  first "><label id="ListPrice"> {!CurrentItem.ListPrice}</label></td>    
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Quoted Price"/></td>
                        <td class="dataCol  first ">
                            <div class="requiredInput">
                                <div class="requiredBlock"></div>
                                <input type="text" id="QuotedPrice" style="text-align:right" value="{!CurrentItem.UnitPrice}" onkeypress="if(glERPSystemName =='SageERPX3'||ERPSystemName =='SageERPX3'){return NumbersOnly(event,this,true,4)}else{return NumbersOnly(event,this,true,2)}" onchange="fncCalculateItemPrice();fncGetProductData();" />
                            </div>
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Extended Price"/></td>
                        <td class="dataCol  first ">

                            <input id="ExtendedPrice" style="text-align:right" readonly="readonly" value="{!CurrentItem.ExtensionAmt}" onkeypress="return NumbersOnly(event,this,true,2)"/>
                        </td>
                    </tr>
                   
                     <tr id="X3LineFields">
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Line amt+tax"/></td>
                        <td class="dataCol  first ">
                            <label id="plusTax">{!CurrentItem.plusTax}</label>
                           <input type="hidden" id="hdrPlusTax"></input>
                        </td>
                        <td class="labelCol vfLabelColTextWrap  first"><apex:outputLabel value="Line amt-tax"/></td>
                        <td class="dataCol  first ">
                            <label id="minustax">{!CurrentItem.minustax}</label>
                            <input type="hidden" id="hdrMinusTax"></input>
                       </td>
                        <td class="labelCol vfLabelColTextWrap  first"><!--<apex:outputLabel value="Net Price"/>--></td>
                        <td class="dataCol  first "><label id="netprice"></label></td>                       
                    
                    </tr>
                   
                </table> 
                <script>
                    var bCommissionable = '{!JSENCODE(CurrentItem.Commissionable)}';
                    var bDropShip = '{!JSENCODE(CurrentItem.DropShip)}';
                    
                    if(bCommissionable.trim().toLowerCase()  == 'y')
                        j$('#Commissionable').prop('checked',true);
                    else
                        j$('#Commissionable').prop('checked',false);    
                        
                    if(bDropShip.trim().toLowerCase()  == 'y')
                        j$('#DropShip').prop('checked',true);
                    else
                        j$('#DropShip').prop('checked',false);
                    
                  
                       j$("[id$='tdTaxClass']").hide();
                       j$("[id$='txClassLookup']").hide();
                       j$("[id$='txRuleLookup']").show();
                       j$("[id$='tdTaxRule']").show();
                       
                       j$("#tdQOHval").hide();
                       j$("#tdQOHlbl").hide();
                       
                       j$("#opProductSite").show();
                       j$('#opProductWarehouse').hide();
                       j$("#sage100comfields").hide();
                       j$('#X3LineFields').show();
                       //document.getElementById('Discount').readOnly=true ;   
                </script>                       
            </apex:pageBlock>

        </div>
        
        <!-- Showing Multiple Products -->
        
        <apex:actionFunction name="AddMultiLineItem" action="{!AddMultiLineItem}" immediate="true" oncomplete="fncCalculateTotal(),hideLoading();" reRender="pbMultipleItems,LineItems,SalesTaxAmt,OrderTotal,OrderTotal_X3" >
            <apex:param name="IntegrationKey" value="" />
            <apex:param name="UniqueKey" value="" />
            <apex:param name="TaxSchedule" value="" />
            <apex:param name="JSONLineItems" value="" assignTo="{!JSONLineItems}"/>
        </apex:actionFunction>
        
        <div id="divMultipleItems" style="display:none;">
        
        <div class="message infoM3" role="alert" id="multiProductHeader" style="display:none">
            <table border="0" cellpadding="0" cellspacing="0" class="messageTable" style="padding:0px;margin:0px;">
                <tbody>
                    <tr valign="top">
                        <td>
                            <div id="imgMultiProdError" style="display:none"><img alt="error" class="msgIcon" src="/s.gif" title="error" style="background-image:url(/img/msg_icons/error24.png);" /></div>
                            <div id="imgMultiProdWarning" style="display:none"><img alt="warning" class="msgIcon" src="/s.gif" title="warning" style="background-image:url(/img/msg_icons/warning24.png);" /></div>
                            <div id="imgMultiProdConfirm" style="display:none"><img alt="confirm" class="msgIcon" src="/s.gif" title="confirm" style="background-image:url(/img/msg_icons/confirm24.png);" /></div>
                            <div id="imgMultiProdInfo" style="display:none"><img alt="info" class="msgIcon" src="/s.gif" title="info" style="background-image:url(/img/msg_icons/info24.png);" /></div>
                        </td>
                        <td class="messageCell"><div id="MultiProdMessage" class="messageText"><span id="idspan"><h4></h4></span>Please select the Integration first.<br/></div></td>
                    </tr>
                    <tr><td></td><td></td></tr>
                </tbody>
            </table>
        </div>
        
            <apex:pageBlock id="pbMultipleItems">
                <apex:pageBlockSection collapsible="false" columns="1">
                    <apex:outputPanel >
                        <input type="button" class="btn" onclick="fncAddRow()" value=" Insert Row " style="margin-bottom: 5px;margin-bottom: 5px;font-weight: bold;font-family: Arial,Helvetica,sans-serif;font-size: 0.9em;"/>
                        <div>
                            <table style="width:100%;border: 1px;border: 1px solid #e0e3e5;border-bottom:0px !important;" class="list" border="0" cellspacing="0" cellpadding="0">
                                <colgroup>                                  
                                    <col width="5%"/>
                                    <col width="10%"/>
                                    <col width="10%"/>
                                    <col width="20%"/>
                                    <col width="10%"/>
                                    <col width="10%"/>
                                    <col width="10%"/>
                                    <col width="10%"/>
                                    <col width="8%"/>
                                    <col width="7%"/>
                                    <col width="15%"/>
                                   
                                </colgroup>
                                <tbody>
                                   <tr class="headerRow">
                                        <td class="hdr">Action</td>
                                        <td class="hdr">Product Family</td>
                                        <td class="hdr">Product Code</td>
                                        <td class="hdr">Product Description</td>
                                        <td class="hdr" style="text-align: right;">Unit Price</td>
                                        <td class="hdr" style="text-align: right;">Quantity</td>
                                        <td class="hdr" style="text-align: right;">Ext. Amt.</td>
                                        <td class="hdr" style="text-align: right;">Qty On Hand</td>
                                        <td id="tdsubTax" class="hdr" style="text-align: right;">Amt-Tax </td>
                                        <td id="tdaddTax" class="hdr" style="text-align: right;">Amt+Tax</td>
                                       <td id="tdComment" class="hdr">Comments</td>                                    
                                       </tr> 
                                </tbody>
                            </table>
                           
                        </div> 
                        
                        <div style="overflow-y:auto;overflow-x:hidden;height:300px;border: 1px solid #eaeaea !important;border-top: 0px none !important;">
                            <table id="tblMultipleItems" style="width:100%;border: 1px;" class="list" border="0" cellspacing="0" cellpadding="0">
                                <colgroup>                                  
                                    <col width="5%"/>
                                    <col width="10%"/>
                                    <col width="10%"/>
                                    <col width="20%"/>
                                    <col width="10%"/>
                                    <col width="10%"/>
                                    <col width="10%"/>
                                    <col width="10%"/>
                                    <col width="8%"/>
                                    <col width="7%"/>
                                    <col width="15%"/>
                                </colgroup>
                            </table>
                        </div>
                    </apex:outputPanel>
                </apex:pageBlockSection>
                
            </apex:pageBlock>
             
        </div>
        
        <apex:outputPanel >
            <div id="dialog-creditcard" title="Credit Card Details" style="display:none"></div>        
            <div id="dialog-message" title="Message" style="display:none">
              <p>
                <span class="ui-icon ui-icon-circle-check" style="float:left; margin:0 7px 50px 0;"></span>
                <span id="message"></span>
              </p>  
            </div>
        </apex:outputPanel>
    </apex:form>
    </apex:pageBlock>
</apex:page>